<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Yi Yao's Homepage - Yi Yao</title><link href="index.html/" rel="alternate"></link><link href="index.html/feeds/yi-yao.atom.xml" rel="self"></link><id>index.html/</id><updated>2017-04-11T23:26:00+02:00</updated><entry><title>SCAN TM pseudopotentials</title><link href="index.html/scan-tm-pseudopotentials.html" rel="alternate"></link><published>2017-04-11T23:26:00+02:00</published><updated>2017-04-11T23:26:00+02:00</updated><author><name>Yi Yao</name></author><id>tag:None,2017-04-11:index.html/scan-tm-pseudopotentials.html</id><summary type="html">&lt;p&gt;SCAN pseudopotentials&lt;/p&gt;</summary><content type="html">&lt;p&gt;Use at your own risk.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;th&gt;===&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="index.html/scan_pps/H.SCAN.UPF"&gt;&lt;strong&gt;H&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="index.html/scan_pps/He.SCAN.UPF"&gt;&lt;strong&gt;He&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href="index.html/scan_pps/Li.SCAN.UPF"&gt;&lt;strong&gt;Li&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="index.html/scan_pps/Be.SCAN.UPF"&gt;&lt;strong&gt;Be&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="index.html/scan_pps/B.SCAN.UPF"&gt;&lt;strong&gt;B&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="index.html/scan_pps/C.SCAN.UPF"&gt;&lt;strong&gt;C&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="index.html/scan_pps/N.SCAN.UPF"&gt;&lt;strong&gt;N&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="index.html/scan_pps/O.SCAN.UPF"&gt;&lt;strong&gt;O&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="index.html/scan_pps/F.SCAN.UPF"&gt;&lt;strong&gt;F&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="index.html/scan_pps/Ne.SCAN.UPF"&gt;&lt;strong&gt;Ne&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Na&lt;/td&gt;
&lt;td&gt;Mg&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="index.html/scan_pps/Al.SCAN.UPF"&gt;&lt;strong&gt;Al&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="index.html/scan_pps/Si.SCAN.UPF"&gt;&lt;strong&gt;Si&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="index.html/scan_pps/P.SCAN.UPF"&gt;&lt;strong&gt;P&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="index.html/scan_pps/S.SCAN.UPF"&gt;&lt;strong&gt;S&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href="index.html/scan_pps/Cl.SCAN.UPF"&gt;&lt;strong&gt;Cl&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Ar&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;K&lt;/td&gt;
&lt;td&gt;Ca&lt;/td&gt;
&lt;td&gt;Sc&lt;/td&gt;
&lt;td&gt;Ti&lt;/td&gt;
&lt;td&gt;V&lt;/td&gt;
&lt;td&gt;Cr&lt;/td&gt;
&lt;td&gt;Mn&lt;/td&gt;
&lt;td&gt;Fe&lt;/td&gt;
&lt;td&gt;Co&lt;/td&gt;
&lt;td&gt;Ni&lt;/td&gt;
&lt;td&gt;Cu&lt;/td&gt;
&lt;td&gt;Zn&lt;/td&gt;
&lt;td&gt;Ga&lt;/td&gt;
&lt;td&gt;&lt;a href="index.html/scan_pps/Ge.SCAN.UPF"&gt;&lt;strong&gt;Ge&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;As&lt;/td&gt;
&lt;td&gt;Se&lt;/td&gt;
&lt;td&gt;Br&lt;/td&gt;
&lt;td&gt;Kr&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Rb&lt;/td&gt;
&lt;td&gt;Sr&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Zr&lt;/td&gt;
&lt;td&gt;Nb&lt;/td&gt;
&lt;td&gt;Mo&lt;/td&gt;
&lt;td&gt;Tc&lt;/td&gt;
&lt;td&gt;Ru&lt;/td&gt;
&lt;td&gt;Rh&lt;/td&gt;
&lt;td&gt;Pd&lt;/td&gt;
&lt;td&gt;Ag&lt;/td&gt;
&lt;td&gt;Cd&lt;/td&gt;
&lt;td&gt;In&lt;/td&gt;
&lt;td&gt;Sn&lt;/td&gt;
&lt;td&gt;Sb&lt;/td&gt;
&lt;td&gt;Te&lt;/td&gt;
&lt;td&gt;I&lt;/td&gt;
&lt;td&gt;Xe&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cs&lt;/td&gt;
&lt;td&gt;Ba&lt;/td&gt;
&lt;td&gt;La&lt;/td&gt;
&lt;td&gt;Hf&lt;/td&gt;
&lt;td&gt;Ta&lt;/td&gt;
&lt;td&gt;W&lt;/td&gt;
&lt;td&gt;Re&lt;/td&gt;
&lt;td&gt;Os&lt;/td&gt;
&lt;td&gt;Ir&lt;/td&gt;
&lt;td&gt;Pt&lt;/td&gt;
&lt;td&gt;Au&lt;/td&gt;
&lt;td&gt;Hg&lt;/td&gt;
&lt;td&gt;Tl&lt;/td&gt;
&lt;td&gt;Pb&lt;/td&gt;
&lt;td&gt;Bi&lt;/td&gt;
&lt;td&gt;Po&lt;/td&gt;
&lt;td&gt;At&lt;/td&gt;
&lt;td&gt;Rn&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Fr&lt;/td&gt;
&lt;td&gt;Ra&lt;/td&gt;
&lt;td&gt;Ac&lt;/td&gt;
&lt;td&gt;Rf&lt;/td&gt;
&lt;td&gt;Db&lt;/td&gt;
&lt;td&gt;Sg&lt;/td&gt;
&lt;td&gt;Rh&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1&gt;reference:&lt;/h1&gt;
&lt;p&gt;The Journal of Chemical Physics 146, 224105 (2017)&lt;/p&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="DFT"></category></entry><entry><title>tricubic interpolation</title><link href="index.html/tricubic-interpolation.html" rel="alternate"></link><published>2017-02-13T10:00:00+01:00</published><updated>2017-02-13T10:00:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2017-02-13:index.html/tricubic-interpolation.html</id><summary type="html">&lt;p&gt;tricubic interpolation&lt;/p&gt;</summary><content type="html">&lt;p&gt;When dealing with charge density data or wave function data stored in a cube file, I sometimes would like to find a charge density in a specific point in the space. However, only density on grid is stored in the file. Interpolation is necessary for this purpose. In scipy, scipy.interpolate.RegularGridInterpolator can be used for 3d interpolation, but only "nearest" and "linear" method is available. In order to get high presicion, &lt;a href="http://onlinelibrary.wiley.com/doi/10.1002/nme.1296/full"&gt;Tricubic&lt;/a&gt; interpolation could help. In two packages, this function is available. &lt;a href="https://github.com/danielguterding/pytricubic"&gt;pytricubic&lt;/a&gt; and &lt;a href="https://eqtools.readthedocs.io/en/latest/eqtools.html#module-eqtools.trispline"&gt;eqtools&lt;/a&gt;, I tried both and both works fine. I would recommend the eqtools since it is easy to install and doesnt have a dependence on Eigen or boost.&lt;/p&gt;
&lt;p&gt;Here I give a small test script for comparison of nearst, linear, and tricubic interpolation accuracy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;scipy.interpolate&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;RegularGridInterpolator&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;eqtools.trispline&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Spline&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;
&lt;span class="n"&gt;xgrid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ygrid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;zgrid&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;zeros&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;dtype&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;float&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;xgrid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;\
                         &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ygrid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;\
                         &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;zgrid&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;interpolating_function_tricubic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Spline&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xgrid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ygrid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;zgrid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;interpolating_function&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RegularGridInterpolator&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;xgrid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ygrid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;zgrid&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;linear&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;interpolating_function_nearest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;RegularGridInterpolator&lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;xgrid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ygrid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;zgrid&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;nearest&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="n"&gt;error_nearest&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;
&lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;
&lt;span class="n"&gt;error_tricubic&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.0&lt;/span&gt;
&lt;span class="n"&gt;xgrid_d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;ygrid_d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;zgrid_d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;linspace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;k&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt;  &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;interpolating_function&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;xgrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;ygrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;zgrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; \
                         &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;xgrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;\
                         &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ygrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;\
                         &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;zgrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]))[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;error_nearest&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt;  &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;interpolating_function_nearest&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;xgrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;ygrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;zgrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]])&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; \
                         &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;xgrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;\
                         &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ygrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;\
                         &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;zgrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]))[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="n"&gt;error_tricubic&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt;  &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;abs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;interpolating_function_tricubic&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;\
                         &lt;span class="n"&gt;xgrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;ygrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;zgrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;\
                         &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;xgrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;\
                         &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ygrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;\
                         &lt;span class="n"&gt;np&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sin&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;zgrid_d&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;k&lt;/span&gt;&lt;span class="p"&gt;]))[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;average error for nearest, linear, and tricubic interpolation&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;error_nearest&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;error&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;error_tricubic&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It gave such result, showing better accuracy for tricubic interpolation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;average error for nearest, linear, and tricubic interpolation
0.0479790688641 0.0103316526679 0.000350221662438
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="python"></category></entry><entry><title>molecular dynamics simulations by gromacs lammps cpmd cp2k cp.x qbox from scratch</title><link href="index.html/molecular-dynamics-simulations-by-gromacs-lammps-cpmd-cp2k-cpx-qbox-from-scratch.html" rel="alternate"></link><published>2017-01-09T10:00:00+01:00</published><updated>2017-01-09T10:00:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2017-01-09:index.html/molecular-dynamics-simulations-by-gromacs-lammps-cpmd-cp2k-cpx-qbox-from-scratch.html</id><summary type="html">&lt;p&gt;FPMD setup&lt;/p&gt;</summary><content type="html">&lt;p&gt;Example of setting up first principle molecular dynamics (FPMD) simulation from scratch. &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;In FPMD simulations for liquids, usually, a classical MD simulation is needed to equilibrate the system. I gave examples of using gromacs and lammps as classical MD simulator and cpmd, cp2k, cp.x, qbox as FPMD simulator. The system of 55 water at room temperature is used as the example.    &lt;/p&gt;
&lt;p&gt;From scratch means I generate the initial structure from the water molecular structure.   &lt;/p&gt;
&lt;p&gt;In this post, 3 steps are listed.  &lt;br&gt;
1. generating initial structure  &lt;br&gt;
2. equilibrate the system by classical MD  ( 2.1 gromacs code, 2.2 lammps code )  &lt;br&gt;
3. running a short FPMD simulation ( 3.1 cpmd code 3.2 cp2k code 3.3 cp.x code 3.4 qbox code )&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;softwares used:
&lt;a href="http://www.ks.uiuc.edu/Research/vmd/"&gt;VMD&lt;/a&gt;
&lt;a href="http://www.ime.unicamp.br/~martinez/packmol/home.shtml"&gt;packmol&lt;/a&gt;
&lt;a href="http://www.gromacs.org/"&gt;gromacs&lt;/a&gt;
&lt;a href="http://lammps.sandia.gov/"&gt;lammps&lt;/a&gt;
&lt;a href="http://www.cpmd.org/"&gt;cpmd&lt;/a&gt;
&lt;a href="https://www.cp2k.org/"&gt;cp2k&lt;/a&gt;
&lt;a href="http://www.quantum-espresso.org/"&gt;cp.x quantum-espresso&lt;/a&gt;
&lt;a href="http://eslab.ucdavis.edu/software/qbox/"&gt;qbox&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;0 download the files&lt;/h3&gt;
&lt;p&gt;All the files needed are included here.  &lt;/p&gt;
&lt;p&gt;&lt;a href="index.html/codes/AIMD_setup.tar.gz"&gt;AIMD_setup.tar.gz&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;1.1 generate initial structure for gromacs&lt;/h3&gt;
&lt;p&gt;Note: in gromacs, genbox command can be used to generate a water box. Here I use packmol to generate the input structure and convert it to gro file as input.&lt;/p&gt;
&lt;p&gt;The water structure is as follow (water.xyz):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;3

OW 0.0 0.0 0.0
HW1 -0.81649 0.57736 0.0
HW2 0.81649 0.57736 0.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;a packmol input (water55_packmol.in) script is used here to generate the structure of the total system.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tolerance 2.0
filetype xyz
output water55.xyz

structure water.xyz
  number 55
  inside box 0. 0.  0. 10.8172 10.8172 10.8172
end structure
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And also I have a python script for the convertion from xyz to gro file (convert_xyz_to_gro.py), the class mdsystem.py can be download here.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;mdsystem&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;water55.xyz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mdsystem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cell&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;11.8172&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;11.8172&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;11.8172&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xyzinput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generate_bonds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cutoff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;molecular_detection&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;moleculars&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;molecular_names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SOL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;grooutput&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;convert_xyz_to_gro&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;water55&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;gro&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I use this structure for the input of classical molecular dynamics simulation in gromacs.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;1.2 generate initial structure for lammps&lt;/h3&gt;
&lt;p&gt;The water structure is as follow (water.xyz):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;3

O 0.0 0.0 0.0
H -0.81649 0.57736 0.0
H 0.81649 0.57736 0.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;a packmol input (water55_packmol.in) script is used here to generate the structure of the total system.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tolerance 2.0
filetype xyz
output water55.xyz

structure water.xyz
  number 55
  inside box 0. 0.  0. 10.8172 10.8172 10.8172
end structure
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And also I have a vmd script for the generation of psf and pdb and lammps data file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;mol new water55.xyz&lt;/span&gt;

&lt;span class="x"&gt;pbc set &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt; &lt;span class="m"&gt;11.8172&lt;/span&gt; &lt;span class="m"&gt;11.8172&lt;/span&gt; &lt;span class="m"&gt;11.8172&lt;/span&gt; &lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;topo clearbonds&lt;/span&gt;
&lt;span class="x"&gt;for &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nf"&gt;set&lt;/span&gt; &lt;span class="na"&gt;i&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;55&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nf"&gt;incr&lt;/span&gt; &lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addbond&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addbond&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addangle&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="x"&gt;animate write psf water55.psf&lt;/span&gt;
&lt;span class="x"&gt;animate write pdb water55.pdb&lt;/span&gt;
&lt;span class="x"&gt;topo writelammpsdata water55.data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I use this structure for the input of classical molecular dynamics simulation in lammps.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;2.1 gromacs code&lt;/h3&gt;
&lt;p&gt;for gromacs simulation, there is separate forcefield file and topology file ( spcfw.itp and water55.top ).&lt;/p&gt;
&lt;p&gt;two mdp input files needed ( min.mdp nvt.mdp ), the first one is used to minimize the structure, the second one is used for the simulation. Here is the command I use for the simulation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gmx grompp -f min.mdp -c water55.gro -p water55.top -o min.tpr
gmx mdrun -s min.tpr -c em.gro
gmx grompp -f nvt.mdp -c em.gro -p water55.top -o nvt.tpr
gmx mdrun -s nvt.tpr
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In the example, I run 100ps for equlibrating the system. In real simulation, longer is usually needed.&lt;/p&gt;
&lt;p&gt;I also like to convert the trajectory so that the atom in the same molecule are not separate in the edge of the box.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;gmx trjconv -s nvt.tpr -f traj_comp.xtc -o traj_comp_whole.xtc -pbc whole &amp;lt;&amp;lt;&amp;lt; &amp;quot;0&amp;quot;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then, the script ( take_last_snapshot.vmd ) can be used to take the last snapshot of the simulation as the initial structure for FPMD.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mol new water55.psf
mol addfile traj_comp_whole.xtc waitfor all
pbc wrap -all -compound residue
set nframes [molinfo top get numframes]
set nframes [expr $nframes - 1]
animate write xyz eq.xyz beg $nframes
exit
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h3&gt;2.2 lammps code&lt;/h3&gt;
&lt;p&gt;Here we use the generated initial structure to run molecular dynamics with lammps. SPC/Fw force field is used.&lt;br&gt;
Here is the ( in.spcf ) lammps input script&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;units      real
dimension  3
boundary   p p p
atom_style full
read_data water55.data

## alternate way to set charges - besides manually in data file ###
group ox type 2
group hy type 1
set group ox charge -0.8200
set group hy charge 0.4100

pair_style lj/cut/coul/long 5.9086
pair_coeff * * 0.0 0.0
pair_coeff 2 2 0.1553537 3.166
bond_style  harmonic
bond_coeff  1 529.581 1.0120
angle_style harmonic
angle_coeff 1 37.95 113.24
kspace_style ewald 1.0e-5

velocity all create 298.0 12345689 dist uniform
fix 2 all nvt temp 298.0 298.0 100.0


neighbor 2.0 bin
neigh_modify delay 0 every 10 check yes
thermo      200
thermo_style custom step time temp
thermo_modify norm no flush yes

minimize 1.0e-8 1.0e-8 10000 10000

dump 1 all dcd 2000 result.dcd
dump_modify 1 unwrap yes
#run variables
timestep 0.5
run 200000 # 100ps, longer needed ( 2000000 10ns )
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;after the simulation, the ( result.dcd ) together with the ( water55.psf )&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mol new water55.psf
mol addfile result.dcd waitfor all
pbc wrap -all -compound residue
set nframes [molinfo top get numframes]
set nframes [expr $nframes - 1]
animate write xyz eq.xyz beg $nframes
exit
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;p&gt;After the equilibrium run. I got the equilibrium structure (eq.xyz) from gromacs or lammps run. Now, I will use this structure as starting point for FPMD simulations.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;3.1 cpmd code&lt;/h3&gt;
&lt;p&gt;I recommend a tutorial about cpmd code ( &lt;a href="http://www.ipcms.unistra.fr/wp-content/uploads/2016/03/cpmd.pdf"&gt;cpmd.pdf&lt;/a&gt; ).&lt;/p&gt;
&lt;p&gt;First, the equilibrium structure need to be transformed to CPMD format. Here is the script ( cpmd_initial_structures.py ).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;mdsystem&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mdsystem&lt;/span&gt;&lt;span class="p"&gt;([],[],[])&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xyzinput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;atom_number&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="n"&gt;atom_xyz&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;atom&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;atom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;species&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;atom_number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;atom_number&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;atom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;species&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;atom_xyz&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;atom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;species&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;atom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;atom_number&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;atom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;species&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;atom_xyz&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;atom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;species&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;atom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;coordinates&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;coord&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;w&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;amp;ATOMS&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;ISOTOPES&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;16.01&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1.008&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*O_MT_PBE.psp KLEINMAN-BYLANDER&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; LMAX=P LOC=P&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;atom_number&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;coord&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;atom_xyz&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;O&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%f&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;%f&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;%f&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;coord&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;coord&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;coord&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;*H_MT_PBE.psp KLEINMAN-BYLANDER&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; LMAX=S LOC=S&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;atom_number&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;coord&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;atom_xyz&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]:&lt;/span&gt;
    &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%f&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;%f&lt;/span&gt;&lt;span class="s2"&gt; &lt;/span&gt;&lt;span class="si"&gt;%f&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="n"&gt;coord&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;coord&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;coord&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;amp;END&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;close&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I am using cpmd simulation in cpmd code, so wavefucntion need to be optimized, first. Append the coord file at the end of the input file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;amp;INFO
wf opt for pure 55 water
&amp;amp;END

&amp;amp;CPMD
 OPTIMIZE WAVEFUNCTION

 CONVERGENCE ORBITALS
   1.0d-7
 ODIIS NO_RESET=50
   5
 MAXSTEP
  1000

 MEMORY BIG
&amp;amp;END

&amp;amp;SYSTEM
 SYMMETRY
  1
 ANGSTROM
 CELL
  11.8172 1.0 1.0  0.0  0.0  0.0
 CUTOFF
  80.0
 TESR
  4
&amp;amp;END

&amp;amp;DFT
 NEWCODE
 FUNCTIONAL PBE
&amp;amp;END
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;after the wavefunction optimization, a RESTART.1 file should be there. And we generate a LATEST file for the restart.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;amp;INFO
equilibrium steps md at T=300K to get thermo info
&amp;amp;END

&amp;amp;CPMD
 MOLECULAR DYNAMICS
 RESTART WAVEFUNCTIONS COORDINATES LATEST

 RESTFILE
 3

 TRAJECTORY SAMPLE XYZ
  10

 TEMPERATURE
   300

 NOSE IONS
   300 3000.0

 NOSE ELECTRONS
   0.03  9000.0

 MAXSTEP
   100

 TIMESTEP
  4.0
 EMASS
  400.0

 MEMORY BIG

 RHOOUT SAMPLE=100

 SUBTRACT COMVEL ROTVEL
 1

&amp;amp;END

&amp;amp;SYSTEM
 SYMMETRY
  1
 ANGSTROM
 CELL
  11.8172 1.0 1.0  0.0  0.0  0.0
 CUTOFF
  80.0
 TESR
  4
&amp;amp;END

&amp;amp;DFT
 NEWCODE
 FUNCTIONAL PBE
&amp;amp;END
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h3&gt;3.2 cp2k code&lt;/h3&gt;
&lt;p&gt;In cp2k, BOMD is running.  &lt;/p&gt;
&lt;p&gt;copy the eq.xyz file to the cp2k folder and write this input file for FPMD. (water55.inp)  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;amp;FORCE_EVAL
  METHOD Quickstep
  &amp;amp;DFT
    BASIS_SET_FILE_NAME    BASIS_MOLOPT
    POTENTIAL_FILE_NAME    GTH_POTENTIALS
    &amp;amp;MGRID
     CUTOFF      200
     REL_CUTOFF   50
    &amp;amp;END MGRID
    &amp;amp;QS
      EPS_DEFAULT 1.0E-12
    &amp;amp;END QS
    &amp;amp;SCF
      SCF_GUESS  ATOMIC
      EPS_SCF    1.0E-6
      MAX_SCF    30
      &amp;amp;OT
        MINIMIZER       DIIS
        PRECONDITIONER  FULL_ALL
      &amp;amp;END
      &amp;amp;OUTER_SCF
        EPS_SCF  1.0E-6
        MAX_SCF  20
      &amp;amp;END
      &amp;amp;PRINT
        &amp;amp;RESTART
          BACKUP_COPIES 0
        &amp;amp;END
      &amp;amp;END
    &amp;amp;END SCF
    &amp;amp;XC
      &amp;amp;XC_FUNCTIONAL PBE
      &amp;amp;END XC_FUNCTIONAL
    &amp;amp;END XC
  &amp;amp;END DFT
  &amp;amp;SUBSYS
    &amp;amp;CELL
      ABC 11.8172 11.8172 11.8172
    &amp;amp;END CELL
    &amp;amp;TOPOLOGY
       COORD_FILE_NAME   ./eq.xyz
       COORD_FILE_FORMAT xyz
    &amp;amp;END TOPOLOGY
    &amp;amp;KIND H
      BASIS_SET         DZVP-MOLOPT-SR-GTH
      POTENTIAL         GTH-PBE-q1
    &amp;amp;END KIND
    &amp;amp;KIND O
      BASIS_SET         DZVP-MOLOPT-SR-GTH
      POTENTIAL         GTH-PBE-q6
    &amp;amp;END KIND
  &amp;amp;END SUBSYS
&amp;amp;END FORCE_EVAL
&amp;amp;MOTION
  &amp;amp;MD
    ENSEMBLE NVE
    STEPS 100
    TIMESTEP 0.5
    TEMPERATURE 300.0
  &amp;amp;END MD
&amp;amp;END MOTION
&amp;amp;GLOBAL
  PROJECT     H2O-55-PBE
  RUN_TYPE    MD
  PRINT_LEVEL MEDIUM
&amp;amp;END GLOBAL
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h3&gt;3.3 cp.x code&lt;/h3&gt;
&lt;p&gt;The script here.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd &lt;span class="nv"&gt;$PWD&lt;/span&gt;

Name=cp-H2O

fricei=( 1.0 1.0 0.5 0.1 0.0 0.0 0.0 )
fricpi=( 0.9 1.0 0.3 0.05 0.0 0.0 0.0 )
runi=( 100 100 200 200 1500 1500 35000 )
orthoi=( Gram-Schmidt ortho ortho ortho ortho ortho ortho )
modei=( from_scratch reset_counters restart restart reset_counters restart restart)
wfr=( 51 51 51 51 51 71 72 )
wfw=( 51 51 51 51 71 72 73 )
ions=( none none none none verlet verlet verlet)
tempi=( 50 50 50 50 300 350 375 )
electrons=( damp damp damp damp verlet verlet verlet )

typeset -i j=1
while (( j == 1 ));do
if [[ -d &amp;quot;H2O_&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;wfw&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;.save&amp;quot; ]]; then
 wfr[6]=&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;wfw&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
 wfw[6]=$((&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;wfw&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;+1))
else
 j=0
fi
done

echo &amp;quot;in&amp;quot;

for i in 0 1 2 3 4 ;
do

rm -f in.00
cat &lt;span class="nt"&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt; in.00&lt;/span&gt;

&lt;span class="err"&gt;&amp;amp;CONTROL&lt;/span&gt;
  &lt;span class="na"&gt;outdir =&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nv"&gt;$PWD&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;
  &lt;span class="na"&gt;pseudo_dir =&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;./&amp;#39;&lt;/span&gt;
  &lt;span class="na"&gt;title  =&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;H2O&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;prefix =&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;H2O&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;calculation =&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;cp&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;restart_mode =&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;modei&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;ndr =&lt;/span&gt; &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;wfr&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="s"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;ndw =&lt;/span&gt; &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;wfw&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="s"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;nstep  =&lt;/span&gt; &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;runi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="s"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;iprint =&lt;/span&gt; &lt;span class="s"&gt;20,&lt;/span&gt;
  &lt;span class="na"&gt;isave  =&lt;/span&gt; &lt;span class="s"&gt;1000,&lt;/span&gt;
  &lt;span class="na"&gt;tstress =&lt;/span&gt; &lt;span class="s"&gt;.true.,&lt;/span&gt;
  &lt;span class="na"&gt;tprnfor =&lt;/span&gt; &lt;span class="s"&gt;.true.,&lt;/span&gt;
  &lt;span class="na"&gt;dt    =&lt;/span&gt;  &lt;span class="s"&gt;3.d0,&lt;/span&gt;
&lt;span class="err"&gt;!&lt;/span&gt;  &lt;span class="na"&gt;etot_conv_thr =&lt;/span&gt; &lt;span class="s"&gt;1.D-8&lt;/span&gt;
&lt;span class="err"&gt;!&lt;/span&gt;  &lt;span class="na"&gt;forc_conv_thr =&lt;/span&gt; &lt;span class="s"&gt;1.D-3&lt;/span&gt;
&lt;span class="err"&gt;/&lt;/span&gt;


&lt;span class="err"&gt;&amp;amp;SYSTEM&lt;/span&gt;
  &lt;span class="na"&gt;ibrav =&lt;/span&gt; &lt;span class="s"&gt;1,&lt;/span&gt;
  &lt;span class="err"&gt;celldm(1)&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;CELL_X_YY,&lt;/span&gt;
  &lt;span class="err"&gt;celldm(2)&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;1.00,&lt;/span&gt;
  &lt;span class="err"&gt;celldm(3)&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;1.00,&lt;/span&gt;
  &lt;span class="err"&gt;celldm(4)&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;0.0,&lt;/span&gt;
  &lt;span class="err"&gt;celldm(5)&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;0.0,&lt;/span&gt;
  &lt;span class="err"&gt;celldm(6)&lt;/span&gt; &lt;span class="err"&gt;=&lt;/span&gt; &lt;span class="err"&gt;0.0,&lt;/span&gt;
  &lt;span class="na"&gt;nat  =&lt;/span&gt; &lt;span class="s"&gt;NATOMS_YY,&lt;/span&gt;
  &lt;span class="na"&gt;ntyp =&lt;/span&gt; &lt;span class="s"&gt;2,&lt;/span&gt;
  &lt;span class="na"&gt;nspin =&lt;/span&gt; &lt;span class="s"&gt;1,&lt;/span&gt;
  &lt;span class="na"&gt;ecutwfc =&lt;/span&gt; &lt;span class="s"&gt;25.0,&lt;/span&gt;
  &lt;span class="na"&gt;ecutrho =&lt;/span&gt; &lt;span class="s"&gt;200.0,&lt;/span&gt;
  &lt;span class="na"&gt;nr1b=&lt;/span&gt; &lt;span class="s"&gt;20,&lt;/span&gt; &lt;span class="na"&gt;nr2b =&lt;/span&gt; &lt;span class="s"&gt;20,&lt;/span&gt; &lt;span class="na"&gt;nr3b =&lt;/span&gt; &lt;span class="s"&gt;20,&lt;/span&gt;
&lt;span class="err"&gt;!&lt;/span&gt;  &lt;span class="err"&gt;starting_magnetization(1)=0.1,&lt;/span&gt;
&lt;span class="err"&gt;!&lt;/span&gt;  &lt;span class="na"&gt;occupations=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;from_input&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
&lt;span class="err"&gt;/&lt;/span&gt;

&lt;span class="err"&gt;&amp;amp;ELECTRONS&lt;/span&gt;
  &lt;span class="na"&gt;emass =&lt;/span&gt; &lt;span class="s"&gt;340.d0,&lt;/span&gt;
  &lt;span class="na"&gt;emass_cutoff =&lt;/span&gt; &lt;span class="s"&gt;2.0d0,&lt;/span&gt;
  &lt;span class="na"&gt;orthogonalization =&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;orthoi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;ortho_eps =&lt;/span&gt; &lt;span class="s"&gt;5.d-8,&lt;/span&gt;
  &lt;span class="na"&gt;ortho_max =&lt;/span&gt; &lt;span class="s"&gt;200,&lt;/span&gt;
  &lt;span class="na"&gt;electron_dynamics =&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;electrons&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;electron_damping =&lt;/span&gt; &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;fricei&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="s"&gt;,&lt;/span&gt;
&lt;span class="err"&gt;/&lt;/span&gt;

&lt;span class="err"&gt;&amp;amp;IONS&lt;/span&gt;
  &lt;span class="na"&gt;ion_dynamics =&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;ions&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;ion_damping =&lt;/span&gt; &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;fricpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="s"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;tempw  =&lt;/span&gt; &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;tempi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="s"&gt;,&lt;/span&gt;
&lt;span class="err"&gt;!&lt;/span&gt;  &lt;span class="na"&gt;ion_temperature =&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;rescaling&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;ion_temperature =&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;nose&amp;#39;&lt;/span&gt;&lt;span class="err"&gt;,&lt;/span&gt;
  &lt;span class="na"&gt;fnosep =&lt;/span&gt; &lt;span class="s"&gt;10.0&lt;/span&gt;  &lt;span class="err"&gt;30.0&lt;/span&gt;   &lt;span class="err"&gt;60.0&lt;/span&gt;  &lt;span class="err"&gt;100.0,&lt;/span&gt;
  &lt;span class="na"&gt;nhpcl =&lt;/span&gt; &lt;span class="s"&gt;4,&lt;/span&gt;
  &lt;span class="na"&gt;nhptyp =&lt;/span&gt; &lt;span class="s"&gt;2,&lt;/span&gt;
&lt;span class="err"&gt;/&lt;/span&gt;

&lt;span class="err"&gt;ATOMIC_SPECIES&lt;/span&gt;
&lt;span class="err"&gt;H&lt;/span&gt; &lt;span class="err"&gt;1.008&lt;/span&gt; &lt;span class="err"&gt;H.pbe-van_ak.UPF&lt;/span&gt;
&lt;span class="err"&gt;O&lt;/span&gt; &lt;span class="err"&gt;15.999&lt;/span&gt; &lt;span class="err"&gt;O.pbe-van_ak.UPF&lt;/span&gt;

&lt;span class="err"&gt;ATOMIC_POSITIONS&lt;/span&gt; &lt;span class="err"&gt;(&lt;/span&gt; &lt;span class="err"&gt;angstrom&lt;/span&gt; &lt;span class="err"&gt;)&lt;/span&gt;
&lt;span class="err"&gt;COORD_YY&lt;/span&gt;

&lt;span class="err"&gt;EOF&lt;/span&gt;

&lt;span class="err"&gt;echo&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;Strat&lt;/span&gt; &lt;span class="err"&gt;turn&lt;/span&gt; &lt;span class="err"&gt;of&amp;#39;&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;
&lt;span class="err"&gt;mpirun&lt;/span&gt; &lt;span class="err"&gt;~/software/qe/qe-6.0/bin/cp.x&lt;/span&gt; &lt;span class="nt"&gt;&amp;lt; in.00&lt;/span&gt; &lt;span class="nt"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nv"&gt;$Name.out&lt;/span&gt;

done

echo &amp;#39;ALL DONE&amp;#39;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The coord generate script.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;head -n 167 eq.xyz | tail -n 165 &amp;gt; coord
sed &amp;#39;s/CELL_X_YY/22.331269952/&amp;#39; water_template.j &amp;gt; water_tmp.j
sed &amp;#39;s/NATOMS_YY/165/&amp;#39; water_tmp.j &amp;gt;  water_tmp2.j
sed &amp;quot;/COORD_YY/ r coord&amp;quot; water_tmp2.j &amp;gt; water_tmp3.j
sed &amp;quot;s/COORD_YY/ /&amp;quot; water_tmp3.j &amp;gt; water.j
rm water_tmp.j water_tmp2.j water_tmp3.j
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;h3&gt;3.4 qbox code&lt;/h3&gt;
&lt;p&gt;For qbox code, also a convertor script is needed. The units used in qbox is atomic units. I list the script here.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;mdsystem&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;eq.xyz&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;mdsystem&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cell&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mf"&gt;11.8172&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;11.8172&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;11.8172&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;xyzinput&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;generate_bonds&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cutoff&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;molecular_detection&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;moleculars&lt;/span&gt;&lt;span class="p"&gt;)):&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;molecular_names&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SOL&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;AtoBohr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;1.8897259886&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;set cell &amp;quot;&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;AtoBohr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \
                    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;AtoBohr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; \
                    &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cell&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;AtoBohr&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;species oxygen O_HSCV_PBE-1.0.xml&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;species hydrogen H_HSCV_PBE-1.0.xml&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;nO&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="n"&gt;nH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;atom&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;atom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;species&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;O&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;nO&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;xyz&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;atom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;coordinates&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;AtoBohr&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;atom &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;O&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;nO&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;oxygen&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;xyz&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;xyz&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;xyz&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;atom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;species&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;H&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;nH&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;xyz&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;atom&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;coordinates&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;AtoBohr&lt;/span&gt;
        &lt;span class="k"&gt;print&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;atom &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;H&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;nH&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;hydrogen&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="n"&gt;xyz&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;xyz&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;xyz&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;with pseudopotentials files and sample.xsd, species.xsd (taken from xml folder in qbox package) in the same folder. &lt;br&gt;
We then append these commands at the end of the structure information.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;set ecut 70
set wf_dyn PSDA
set ecutprec 5
randomize_wf
run 0 100

set atoms_dyn MD
set dt 40 
run 100 10
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Run the calculation like this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mpirun /nas02/home/y/i/yiy/bin/qb &amp;lt; test.i &amp;gt; test.out
&lt;/pre&gt;&lt;/div&gt;


&lt;hr&gt;
&lt;p&gt;After the simulation, I got trajs like this.  &lt;/p&gt;
&lt;p&gt;&lt;img alt="Alt Text" src="index.html/images/water55_aimd.gif"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="molecular dynamics"></category></entry><entry><title>bash loop template</title><link href="index.html/bash-loop-template.html" rel="alternate"></link><published>2015-05-13T01:56:00+02:00</published><updated>2015-05-13T01:56:00+02:00</updated><author><name>Yi Yao</name></author><id>tag:None,2015-05-13:index.html/bash-loop-template.html</id><summary type="html">&lt;p&gt;the simple use of bash&lt;/p&gt;</summary><content type="html">&lt;p&gt;A bash template for loops.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="nv"&gt;list1&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;seq -w &lt;span class="m"&gt;07&lt;/span&gt; &lt;span class="m"&gt;38&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
&lt;span class="nv"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="nv"&gt;home&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$PWD&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; i in &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;list1&lt;/span&gt;&lt;span class="p"&gt;[*]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
&lt;span class="k"&gt;do&lt;/span&gt;
  mkdir &lt;span class="nv"&gt;$i&lt;/span&gt;
  &lt;span class="nv"&gt;list2&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;seq -w &lt;span class="m"&gt;01&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; j in &lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;list2&lt;/span&gt;&lt;span class="p"&gt;[*]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;
  &lt;span class="k"&gt;do&lt;/span&gt;
    mkdir &lt;span class="nv"&gt;$i&lt;/span&gt;/&lt;span class="nv"&gt;$j&lt;/span&gt;
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="nv"&gt;$j&lt;/span&gt;
    &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$home&lt;/span&gt;
  &lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="bash"></category></entry><entry><title>cube file</title><link href="index.html/cube-file.html" rel="alternate"></link><published>2015-05-07T01:56:00+02:00</published><updated>2015-05-07T01:56:00+02:00</updated><author><name>Yi Yao</name></author><id>tag:None,2015-05-07:index.html/cube-file.html</id><summary type="html">&lt;p&gt;everything about cube file&lt;/p&gt;</summary><content type="html">&lt;p&gt;Cube file is a file format for electron density. &lt;/p&gt;
&lt;p&gt;I found a python code in dftb+ website which can manipulate cube files. &lt;a href="http://www.dftb-plus.info/fileadmin/DFTB-Plus/public/tools/waveplot/r0.3/cubemanip"&gt;link&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It manipulate multiple cube files and can do all kinds of expressions using these cube files as input.&lt;/p&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="dft"></category></entry><entry><title>constrained Density Functional Theory with cp2k</title><link href="index.html/constrained-density-functional-theory-with-cp2k.html" rel="alternate"></link><published>2015-03-09T14:56:00+01:00</published><updated>2015-03-09T14:56:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2015-03-09:index.html/constrained-density-functional-theory-with-cp2k.html</id><summary type="html">&lt;p&gt;A simple example for constrained DFT with cp2k&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://pubs.acs.org/doi/pdf/10.1021/cr200148b"&gt;Constrained Density Functional Theory&lt;/a&gt; has many applications. Here I showed a simple example of cDFT of H2+ system. And I would like to constrain the electron on one proton with cp2k.&lt;/p&gt;
&lt;p&gt;Here is the script.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;amp;FORCE_EVAL
  METHOD Quickstep
  &amp;amp;DFT
    BASIS_SET_FILE_NAME /global/homes/y/yyao_unc/software/cp2k/cp2k/cp2k/data/BASIS_MOLOPT
    POTENTIAL_FILE_NAME /global/homes/y/yyao_unc/software/cp2k/cp2k/cp2k/data/GTH_POTENTIALS
    CHARGE +1
    &amp;amp;MGRID
      CUTOFF 250
      REL_CUTOFF 50
    &amp;amp;END MGRID
    &amp;amp;QS
      METHOD GPW
      &amp;amp;MULLIKEN_RESTRAINT
        TARGET 1.0
        STRENGTH 3000.0
        ATOMS 1
      &amp;amp;END
    &amp;amp;END QS
    &amp;amp;SCF
      &amp;amp;OT ON
        MINIMIZER DIIS
        ENERGY_GAP 0.001
        PRECONDITIONER FULL_ALL
      &amp;amp;END OT
      EPS_SCF 1.0E-6
      SCF_GUESS ATOMIC
      MAX_SCF 200000
    &amp;amp;END SCF
    UKS
    &amp;amp;XC
      &amp;amp;XC_FUNCTIONAL PBE
      &amp;amp;END XC_FUNCTIONAL
      &amp;amp;XC_GRID
        XC_SMOOTH_RHO NN50
        XC_DERIV NN50_SMOOTH
      &amp;amp;END
    &amp;amp;END XC
    &amp;amp;PRINT                                                   
      &amp;amp;E_DENSITY_CUBE                                        
        &amp;amp;EACH                                                
          MD 100                                             
        &amp;amp;END EACH                                            
        STRIDE 1 1 1                                         
      &amp;amp;END E_DENSITY_CUBE                                    
    &amp;amp;END PRINT
  &amp;amp;END DFT
  &amp;amp;SUBSYS
    &amp;amp;CELL
      ABC [bohr] 20.0 20.0 20.0
    &amp;amp;END CELL
    &amp;amp;COORD
     H 10.0 10.0  9.0
     H 10.0 10.0 11.0
     UNIT bohr
    &amp;amp;END COORD
    &amp;amp;KIND H
      BASIS_SET DZVP-MOLOPT-SR-GTH-q1
      #BASIS_SET DZVP-GTH
      POTENTIAL GTH-BLYP-q1
    &amp;amp;END KIND
  &amp;amp;END SUBSYS
&amp;amp;END FORCE_EVAL
&amp;amp;GLOBAL
  PROJECT h2+
  PRINT_LEVEL MEDIUM 
&amp;amp;END GLOBAL
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After the calculation the Mulliken Analysis is showed here.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; MULLIKEN POPULATION ANALYSIS

 #  Atom  Element  Kind  Atomic population (alpha,beta)   Net charge  Spin moment
       1     H        1          0.999915     0.000000     0.000085     0.999915
       2     H        1          0.000085     0.000000     0.999915     0.000085
 # Total charge and spin         1.000000     0.000000     1.000000     1.000000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And I also visulized the charge density cube file. Most of the charge density is on the left proton now.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Alt Text" src="index.html/images/cdft_h2+_cp2k.jpeg"&gt;&lt;/p&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="dft"></category></entry><entry><title>crystal code with lc-blyp functional</title><link href="index.html/crystal-code-with-lc-blyp-functional.html" rel="alternate"></link><published>2015-03-09T14:56:00+01:00</published><updated>2015-03-09T14:56:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2015-03-09:index.html/crystal-code-with-lc-blyp-functional.html</id><summary type="html">&lt;p&gt;using crystal to calculate scf with lc-blyp functional&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://www.crystal.unito.it/index.php"&gt;crystal&lt;/a&gt; is a computational tool for solid state chemistry and physics. Basically, it does DFT. 
I post here an example of lc-blyp calculation of bulk water system.&lt;/p&gt;
&lt;p&gt;When I did the lc-blyp calculation, the scf not converge is a problem. So I did a blyp calculation first. Then copy the fort.9 file to a new folder of fort.20 which is the density matrix file. And I will add a GUESSP command to the INPUT for lc-blyp calculation.&lt;/p&gt;
&lt;p&gt;Here is the inputs:&lt;/p&gt;
&lt;p&gt;INPUT for blyp calculation&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Water cube
CRYSTAL
0 0 0
1
11.8172 11.8172 11.8172 90. 90. 90.
165
8 0.966182090512 1.00021468707 1.4854507836
8 1.03919930271 1.40081195207 1.57239938395
8 1.2300162475 0.527247909826 1.33289637139
8 0.768640540906 1.65014267339 1.3298380327
8 1.15689283417 1.2052291575 1.08481399993
8 0.903492451681 1.21632146363 1.38370900044
8 0.762101766916 0.505654892868 0.887620671563
8 1.38305427682 0.459265985174 1.53107572014
8 1.50650348644 0.456861016146 1.17375080391
8 0.63803650611 1.15520588634 0.658485597265
8 1.45252310192 1.04503698 1.09088574282
8 0.446270182446 0.842531479538 0.927859729885
8 1.43138112243 0.708681921267 0.740832092205
8 0.937938767221 1.03809015672 0.702070372
8 0.863986223471 1.24494550316 0.67097527333
8 1.26616296585 0.550525843685 0.700526097553
8 0.808251954778 1.01392546458 0.888978438209
8 0.700633060285 1.30514241952 1.36784449785
8 1.27978945943 1.22268439224 1.87452839928
8 0.61985597265 1.42719138205 1.54634253461
8 1.52579096571 0.709874674204 0.49502242494
8 0.984720576786 0.61250702366 2.05818366449
8 0.900647784585 0.474448261856 1.22569508852
8 1.49653835088 1.28823308398 0.830222810818
8 1.79160029449 1.07211158312 1.2086718512
8 1.83282960431 0.803301205023 0.9671824967
8 1.34537504654 0.873155146735 1.24777189182
8 0.4377635142 1.24948481874 1.26121712419
8 1.61083522323 0.963454117727 1.32491478523
8 0.89343812409 0.582376366652 1.52855871103
8 0.492430694242 1.0714599059 0.497475290255
8 1.32287047693 1.24018718478 1.48182623633
8 1.08089682835 0.710079629692 1.69978937481
8 0.566233625563 1.66400610974 1.25198558034
8 0.188996462783 0.885536929222 1.46524041228
8 0.92452552212 1.23048649426 1.03169295603
8 0.617660274854 0.817834258538 1.08969459771
8 1.33952662221 0.537026114477 0.97252276343
8 1.21163067393 1.07015274346 0.705801289646
8 0.708953559219 1.40961251396 1.10277104559
8 1.06568992655 0.706494854957 0.400919507159
8 1.12978751312 0.876184290695 0.910686033917
8 1.55138340724 1.51283019666 1.84138306875
8 0.943388281488 0.379874928071 0.842503892631
8 1.35594709407 0.919504451139 1.62474444031
8 0.948775175168 0.840589733609 1.20458492706
8 0.622394898961 1.20107174288 1.02580848255
8 0.784972836205 0.848350032157 1.42938403344
8 1.08217014183 0.360261737129 1.27039222489
8 1.16518735403 1.41018464611 0.848232999357
8 0.851257319839 0.708795315303 0.771359374471
8 0.682134261923 0.819043512846 1.64355321057
8 1.15068908032 0.962640642453 1.15036303016
8 0.595814321497 0.971598517415 0.797778153877
8 1.22474054768 0.674640862472 1.14489794537
1 1.04184933825 0.980869495312 1.46944707714
1 0.966587770369 1.07866017331 1.46048801747
1 1.00937303253 1.3425173476 1.52038587821
1 0.996500440037 1.36528094642 1.63609315235
1 1.19357995126 0.452229885252 1.3260631114
1 1.2984623261 0.518463849304 1.38540804928
1 0.69602291575 1.63709626646 1.29537860068
1 0.773463595437 1.60575229327 1.39931286599
1 1.20908819348 1.22614197949 1.02950817453
1 1.16437641743 1.12178147108 1.09562891379
1 0.947235893443 1.26596960363 1.33223919372
1 0.828159800968 1.25201502894 1.3869174593
1 0.780803151339 0.587075533967 0.881474714822
1 0.68113961006 0.5006251904 0.86950588972
1 1.3673395559 0.378040991098 1.51693726094
1 1.33352156179 0.485049588735 1.59441102799
1 1.47586949531 0.39175532275 1.222188928
1 1.58466718004 0.431308601022 1.15432369766
1 0.712842297668 1.19142317977 0.671666130725
1 0.583473242392 1.21072326778 0.685453745388
1 1.42818645703 0.985092492299 1.14459347392
1 1.40604855634 1.03039180178 1.0221847815
1 0.501959939749 0.818277595369 0.98203043022
1 0.496883864198 0.884192532918 0.874850979928
1 1.3629141421 0.660376992858 0.741408540094
1 1.43287403107 0.754663287412 0.80945367769
1 0.88731882341 1.01235055682 0.761407270758
1 0.921746352774 0.989740039942 0.636936922452
1 0.902074180009 1.16786878448 0.686409132451
1 0.880754916562 1.28857258911 0.734293148969
1 1.20818239515 0.594553701384 0.661167196967
1 1.23049461801 0.478967860407 0.725150289409
1 0.800044934502 1.07074408489 0.951595386386
1 0.830195731645 0.943031936499 0.928683021359
1 0.646418525539 1.23949438107 1.36054429137
1 0.683390312426 1.34626527435 1.43572419863
1 1.24986798903 1.18033011204 1.80907744643
1 1.22760806282 1.2866260197 1.87128905324
1 0.625272230308 1.50671580408 1.54202382967
1 0.535658193142 1.43206825644 1.53148512338
1 1.4713100396 0.673917594692 0.538588328877
1 1.57402514978 0.751981264597 0.544835494026
1 0.949492265511 0.674646109061 2.01927876316
1 1.0533313306 0.647151440273 2.08902565752
1 0.863003249501 0.521055664624 1.28386834445
1 0.915682564398 0.527658159293 1.16331449074
1 1.53407033815 1.26134955827 0.900975781065
1 1.42385751278 1.25535329858 0.838775090546
1 1.83110787665 1.110282385 1.26734920286
1 1.82474283248 1.00062798294 1.19666672308
1 1.82245294994 0.769117895948 0.891854923332
1 1.76170404157 0.803360186846 1.00857690485
1 1.40859916055 0.85375351183 1.29727025014
1 1.33183749111 0.802479098264 1.21061545882
1 0.446815997021 1.21367328978 1.18704210811
1 0.358139576211 1.2353378973 1.2831327218
1 1.66086932607 0.922097112683 1.3729647463
1 1.67285642961 1.01279677081 1.29008411468
1 0.957590545984 0.632685153844 1.5060956064
1 0.933899400873 0.523855397218 1.57795696104
1 0.551201722912 1.10626459737 0.546421995058
1 0.537420031818 1.03579316589 0.432327962631
1 1.25434925363 1.20460235927 1.50925904614
1 1.3737658667 1.17283730495 1.48596918052
1 1.0930285516 0.750098754358 1.77176970856
1 1.07449065769 0.765123464103 1.64081863724
1 0.546249449954 1.66335714044 1.3301193176
1 0.539837355719 1.59276799919 1.21536616119
1 0.251858392851 0.879943302982 1.52049774904
1 0.232733811732 0.878230376062 1.3938625055
1 1.00160816437 1.20912948922 1.04366550452
1 0.879809684189 1.16527443049 1.06027476898
1 0.603268794638 0.750526859154 1.13895787496
1 0.585660731815 0.876426733913 1.13619165285
1 1.37529253969 0.488983600176 1.02619588397
1 1.39717259588 0.536500440037 0.915897251464
1 1.1347961446 1.04030303287 0.712572436787
1 1.2586348712 1.00216734929 0.714364908777
1 0.737165741462 1.46138696138 1.0475441729
1 0.76957561859 1.40887164472 1.16059464171
1 1.1214859696 0.641684916901 0.389652286498
1 1.11558770267 0.759554293741 0.441533019666
1 1.20594083201 0.843863859459 0.920729868328
1 1.12773880445 0.920750008462 0.980929577226
1 1.54368022882 1.42857944352 1.82970407542
1 1.52811452798 1.5493060962 1.77275572894
1 0.933341569915 0.323901262566 0.902686761669
1 0.880308702569 0.433772467251 0.848669820262
1 1.42239016011 0.958958890431 1.59115518058
1 1.39053955252 0.845954625461 1.64973030836
1 0.904962681515 0.791378668382 1.15554928409
1 0.984347053448 0.791743729479 1.2649901838
1 0.65924550655 1.26477194259 1.06843330061
1 0.567882070203 1.15486240395 1.0701736452
1 0.863088210405 0.879352892394 1.41566301662
1 0.793631994043 0.772252987171 1.38942947568
1 1.1214436584 0.328405375216 1.20715423281
1 1.01978683614 0.413442016721 1.25119926886
1 1.0790327658 1.41247715195 0.840384608875
1 1.19636343635 1.47734378702 0.889675049927
1 0.928021527942 0.707212114545 0.729177300883
1 0.798175963849 0.728686406255 0.710141488678
1 0.727429678773 0.844713976238 1.57712486884
1 0.662433148292 0.878843634702 1.6949460109
1 1.09760188539 0.914122804048 1.18704253123
1 1.22259553871 0.945083776191 1.17783011204
1 0.663454963951 0.989731239211 0.839021511018
1 0.599193209897 1.02499153776 0.734202010629
1 1.22917552381 0.615682902887 1.20064211488
1 1.25094929425 0.630362776292 1.07951680601
BASISSET
POB-TZVP
EXCHPERM
DFT
BLYP
CHUNKS
200
END
SHRINK
1 1
FMIXING
30
LEVSHIFT
6 1
END
END
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;INPUT for lc-blyp calculation&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Water cube
CRYSTAL
0 0 0
1
11.8172 11.8172 11.8172 90. 90. 90.
165
8 0.966182090512 1.00021468707 1.4854507836
8 1.03919930271 1.40081195207 1.57239938395
8 1.2300162475 0.527247909826 1.33289637139
8 0.768640540906 1.65014267339 1.3298380327
8 1.15689283417 1.2052291575 1.08481399993
8 0.903492451681 1.21632146363 1.38370900044
8 0.762101766916 0.505654892868 0.887620671563
8 1.38305427682 0.459265985174 1.53107572014
8 1.50650348644 0.456861016146 1.17375080391
8 0.63803650611 1.15520588634 0.658485597265
8 1.45252310192 1.04503698 1.09088574282
8 0.446270182446 0.842531479538 0.927859729885
8 1.43138112243 0.708681921267 0.740832092205
8 0.937938767221 1.03809015672 0.702070372
8 0.863986223471 1.24494550316 0.67097527333
8 1.26616296585 0.550525843685 0.700526097553
8 0.808251954778 1.01392546458 0.888978438209
8 0.700633060285 1.30514241952 1.36784449785
8 1.27978945943 1.22268439224 1.87452839928
8 0.61985597265 1.42719138205 1.54634253461
8 1.52579096571 0.709874674204 0.49502242494
8 0.984720576786 0.61250702366 2.05818366449
8 0.900647784585 0.474448261856 1.22569508852
8 1.49653835088 1.28823308398 0.830222810818
8 1.79160029449 1.07211158312 1.2086718512
8 1.83282960431 0.803301205023 0.9671824967
8 1.34537504654 0.873155146735 1.24777189182
8 0.4377635142 1.24948481874 1.26121712419
8 1.61083522323 0.963454117727 1.32491478523
8 0.89343812409 0.582376366652 1.52855871103
8 0.492430694242 1.0714599059 0.497475290255
8 1.32287047693 1.24018718478 1.48182623633
8 1.08089682835 0.710079629692 1.69978937481
8 0.566233625563 1.66400610974 1.25198558034
8 0.188996462783 0.885536929222 1.46524041228
8 0.92452552212 1.23048649426 1.03169295603
8 0.617660274854 0.817834258538 1.08969459771
8 1.33952662221 0.537026114477 0.97252276343
8 1.21163067393 1.07015274346 0.705801289646
8 0.708953559219 1.40961251396 1.10277104559
8 1.06568992655 0.706494854957 0.400919507159
8 1.12978751312 0.876184290695 0.910686033917
8 1.55138340724 1.51283019666 1.84138306875
8 0.943388281488 0.379874928071 0.842503892631
8 1.35594709407 0.919504451139 1.62474444031
8 0.948775175168 0.840589733609 1.20458492706
8 0.622394898961 1.20107174288 1.02580848255
8 0.784972836205 0.848350032157 1.42938403344
8 1.08217014183 0.360261737129 1.27039222489
8 1.16518735403 1.41018464611 0.848232999357
8 0.851257319839 0.708795315303 0.771359374471
8 0.682134261923 0.819043512846 1.64355321057
8 1.15068908032 0.962640642453 1.15036303016
8 0.595814321497 0.971598517415 0.797778153877
8 1.22474054768 0.674640862472 1.14489794537
1 1.04184933825 0.980869495312 1.46944707714
1 0.966587770369 1.07866017331 1.46048801747
1 1.00937303253 1.3425173476 1.52038587821
1 0.996500440037 1.36528094642 1.63609315235
1 1.19357995126 0.452229885252 1.3260631114
1 1.2984623261 0.518463849304 1.38540804928
1 0.69602291575 1.63709626646 1.29537860068
1 0.773463595437 1.60575229327 1.39931286599
1 1.20908819348 1.22614197949 1.02950817453
1 1.16437641743 1.12178147108 1.09562891379
1 0.947235893443 1.26596960363 1.33223919372
1 0.828159800968 1.25201502894 1.3869174593
1 0.780803151339 0.587075533967 0.881474714822
1 0.68113961006 0.5006251904 0.86950588972
1 1.3673395559 0.378040991098 1.51693726094
1 1.33352156179 0.485049588735 1.59441102799
1 1.47586949531 0.39175532275 1.222188928
1 1.58466718004 0.431308601022 1.15432369766
1 0.712842297668 1.19142317977 0.671666130725
1 0.583473242392 1.21072326778 0.685453745388
1 1.42818645703 0.985092492299 1.14459347392
1 1.40604855634 1.03039180178 1.0221847815
1 0.501959939749 0.818277595369 0.98203043022
1 0.496883864198 0.884192532918 0.874850979928
1 1.3629141421 0.660376992858 0.741408540094
1 1.43287403107 0.754663287412 0.80945367769
1 0.88731882341 1.01235055682 0.761407270758
1 0.921746352774 0.989740039942 0.636936922452
1 0.902074180009 1.16786878448 0.686409132451
1 0.880754916562 1.28857258911 0.734293148969
1 1.20818239515 0.594553701384 0.661167196967
1 1.23049461801 0.478967860407 0.725150289409
1 0.800044934502 1.07074408489 0.951595386386
1 0.830195731645 0.943031936499 0.928683021359
1 0.646418525539 1.23949438107 1.36054429137
1 0.683390312426 1.34626527435 1.43572419863
1 1.24986798903 1.18033011204 1.80907744643
1 1.22760806282 1.2866260197 1.87128905324
1 0.625272230308 1.50671580408 1.54202382967
1 0.535658193142 1.43206825644 1.53148512338
1 1.4713100396 0.673917594692 0.538588328877
1 1.57402514978 0.751981264597 0.544835494026
1 0.949492265511 0.674646109061 2.01927876316
1 1.0533313306 0.647151440273 2.08902565752
1 0.863003249501 0.521055664624 1.28386834445
1 0.915682564398 0.527658159293 1.16331449074
1 1.53407033815 1.26134955827 0.900975781065
1 1.42385751278 1.25535329858 0.838775090546
1 1.83110787665 1.110282385 1.26734920286
1 1.82474283248 1.00062798294 1.19666672308
1 1.82245294994 0.769117895948 0.891854923332
1 1.76170404157 0.803360186846 1.00857690485
1 1.40859916055 0.85375351183 1.29727025014
1 1.33183749111 0.802479098264 1.21061545882
1 0.446815997021 1.21367328978 1.18704210811
1 0.358139576211 1.2353378973 1.2831327218
1 1.66086932607 0.922097112683 1.3729647463
1 1.67285642961 1.01279677081 1.29008411468
1 0.957590545984 0.632685153844 1.5060956064
1 0.933899400873 0.523855397218 1.57795696104
1 0.551201722912 1.10626459737 0.546421995058
1 0.537420031818 1.03579316589 0.432327962631
1 1.25434925363 1.20460235927 1.50925904614
1 1.3737658667 1.17283730495 1.48596918052
1 1.0930285516 0.750098754358 1.77176970856
1 1.07449065769 0.765123464103 1.64081863724
1 0.546249449954 1.66335714044 1.3301193176
1 0.539837355719 1.59276799919 1.21536616119
1 0.251858392851 0.879943302982 1.52049774904
1 0.232733811732 0.878230376062 1.3938625055
1 1.00160816437 1.20912948922 1.04366550452
1 0.879809684189 1.16527443049 1.06027476898
1 0.603268794638 0.750526859154 1.13895787496
1 0.585660731815 0.876426733913 1.13619165285
1 1.37529253969 0.488983600176 1.02619588397
1 1.39717259588 0.536500440037 0.915897251464
1 1.1347961446 1.04030303287 0.712572436787
1 1.2586348712 1.00216734929 0.714364908777
1 0.737165741462 1.46138696138 1.0475441729
1 0.76957561859 1.40887164472 1.16059464171
1 1.1214859696 0.641684916901 0.389652286498
1 1.11558770267 0.759554293741 0.441533019666
1 1.20594083201 0.843863859459 0.920729868328
1 1.12773880445 0.920750008462 0.980929577226
1 1.54368022882 1.42857944352 1.82970407542
1 1.52811452798 1.5493060962 1.77275572894
1 0.933341569915 0.323901262566 0.902686761669
1 0.880308702569 0.433772467251 0.848669820262
1 1.42239016011 0.958958890431 1.59115518058
1 1.39053955252 0.845954625461 1.64973030836
1 0.904962681515 0.791378668382 1.15554928409
1 0.984347053448 0.791743729479 1.2649901838
1 0.65924550655 1.26477194259 1.06843330061
1 0.567882070203 1.15486240395 1.0701736452
1 0.863088210405 0.879352892394 1.41566301662
1 0.793631994043 0.772252987171 1.38942947568
1 1.1214436584 0.328405375216 1.20715423281
1 1.01978683614 0.413442016721 1.25119926886
1 1.0790327658 1.41247715195 0.840384608875
1 1.19636343635 1.47734378702 0.889675049927
1 0.928021527942 0.707212114545 0.729177300883
1 0.798175963849 0.728686406255 0.710141488678
1 0.727429678773 0.844713976238 1.57712486884
1 0.662433148292 0.878843634702 1.6949460109
1 1.09760188539 0.914122804048 1.18704253123
1 1.22259553871 0.945083776191 1.17783011204
1 0.663454963951 0.989731239211 0.839021511018
1 0.599193209897 1.02499153776 0.734202010629
1 1.22917552381 0.615682902887 1.20064211488
1 1.25094929425 0.630362776292 1.07951680601
BASISSET
POB-TZVP
EXCHPERM
DFT
LC-wBLYP
CHUNKS
200
END
GUESSP
SHRINK
1 1
FMIXING
30
LEVSHIFT
6 1
END
END
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And I also post the run.sh file for killdevil here.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash -l&lt;/span&gt;
&lt;span class="c1"&gt;#BSUB -n &amp;quot;60&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#BSUB -e err.%J  &lt;/span&gt;
&lt;span class="c1"&gt;#BSUB -o out.%J&lt;/span&gt;
&lt;span class="c1"&gt;#BSUB -q week&lt;/span&gt;

&lt;span class="nv"&gt;CRYSTAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/nas02/home/y/i/yiy/software/crystal/CRYSTAL14_amd64/bin/Linux-ifort_amd64/v1.0.3/Pcrystal
&lt;span class="c1"&gt;#/usr/mpi/intel/mvapich2-1.7/bin/mpiexec -n 10 $CRYSTAL &amp;gt; cubo.out1 &amp;amp;&amp;gt; cubo.out2&lt;/span&gt;
mpirun &lt;span class="nv"&gt;$CRYSTAL&lt;/span&gt; &amp;gt; H2O55.out1 &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&amp;gt; H2O55.out2
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;A script to transfer xyz file to crystal structure file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;species_dict = {&amp;#39;O&amp;#39;:8, &amp;#39;H&amp;#39;:1, &amp;#39;Na&amp;#39;:17, &amp;#39;Cl&amp;#39;:11}
#read box size
file_box = file(&amp;quot;box&amp;quot;)
line = file_box.readline()
words = line.split()
cell_a = float(words[0])
cell_b = float(words[1])
cell_c = float(words[2])
file_box.close()

#read coordinate
file_coordinate = file(&amp;quot;NaCl_NVT_34000.xyz&amp;quot;)
line = file_coordinate.readline()
words = line.split()
natoms = int(words[0])
file_coordinate.readline()
for i in range(natoms):
    line = file_coordinate.readline()
    words = line.split()
    species = words[0]
    x = float(words[1])
    y = float(words[2])
    z = float(words[3])
    print species_dict[species], x/cell_a, y/cell_b, z/cell_c
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;box file is like this.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;12.4934 12.4934 12.4934
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="dft"></category></entry><entry><title>generate initial structure by packmol</title><link href="index.html/generate-initial-structure-by-packmol.html" rel="alternate"></link><published>2015-01-20T14:25:00+01:00</published><updated>2015-01-20T14:25:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2015-01-20:index.html/generate-initial-structure-by-packmol.html</id><summary type="html">&lt;p&gt;generate initial structure by packmol&lt;/p&gt;</summary><content type="html">&lt;p&gt;The initial structure for md simulation will be generated by packmol then do an equilibrium step by lammps. The system I would like to prepare is 4M NaCl solution. ( 9 Na+ 9 Cl- and 115 H2O with the box size 15.5473 A. ) The template structure of Na+ and Cl- and tip4p H2O structure are prepared first. &lt;/p&gt;
&lt;p&gt;na.xyz&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;2

Na 0.0 0.0 0.0
NaD 0.0 0.0 0.02
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;cl.xyz&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;2

Cl 0.0 0.0 0.0
ClD 0.0 0.0 0.02
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;tip4p.xyz&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;3

O 0.0 0.0 0.0
H -0.75695 0.58588 0.0
H 0.75695 0.58588 0.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and also I have the input file for packmol with the name of packmol_NaClH2O.inp&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#
# A mixture of water and NaCl
#

tolerance 2.5
filetype xyz
output NaClH2O.xyz

structure tip4p.xyz
  number 115
  inside box 0. 0. 0. 15.0473 15.0473 15.0473 # 15.5473
end structure

structure na.xyz
  number 9
  inside box 0. 0. 0. 15.0473 15.0473 15.0473 # 15.5473
end structure

structure cl.xyz
  number 9
  inside box 0. 0. 0. 15.0473 15.0473 15.0473 # 15.5473
end structure
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then run packmol.sh script&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;PACKMOL=&amp;quot;$HOME/software/packmol/packmol/packmol&amp;quot;
INPUT=packmol_NaClH2O.inp

$PACKMOL &amp;lt; $INPUT
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;With the help of vmd program, the data file and psf topo file are generated.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;mol new NaClH2O.xyz waitfor all&lt;/span&gt;

&lt;span class="x"&gt;pbc set &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt; &lt;span class="m"&gt;15.5473&lt;/span&gt; &lt;span class="m"&gt;15.5473&lt;/span&gt; &lt;span class="m"&gt;15.5473&lt;/span&gt; &lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="x"&gt;#add bonds and angles&lt;/span&gt;
&lt;span class="x"&gt;topo clearbonds&lt;/span&gt;
&lt;span class="x"&gt;for &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nf"&gt;set&lt;/span&gt; &lt;span class="na"&gt;i&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;115&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nf"&gt;incr&lt;/span&gt; &lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addbond&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="na"&gt;bondtype&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="na"&gt;bond&lt;/span&gt; &lt;span class="na"&gt;O&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="na"&gt;H&lt;/span&gt;
  &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addbond&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="na"&gt;bondtype&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="na"&gt;bond&lt;/span&gt; &lt;span class="na"&gt;O&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="na"&gt;H&lt;/span&gt;
  &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addangle&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt; &lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="na"&gt;angle&lt;/span&gt; &lt;span class="na"&gt;H&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="na"&gt;O&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="na"&gt;H&lt;/span&gt;
&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="x"&gt;for &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nf"&gt;set&lt;/span&gt; &lt;span class="na"&gt;i&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;18&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nf"&gt;incr&lt;/span&gt; &lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;
  &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addbond&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="m"&gt;115&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="m"&gt;115&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="na"&gt;bondtype&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;
&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;



&lt;span class="x"&gt;topo writelammpsdata data.NaClH2O&lt;/span&gt;
&lt;span class="x"&gt;animate write psf NaClH2O.psf&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then I manually modified the molecule ids in data file.&lt;/p&gt;
&lt;p&gt;After that, lammps is used to equilibrium the system.&lt;/p&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="misc"></category></entry><entry><title>using gaussian do ccsd calculation</title><link href="index.html/using-gaussian-do-ccsd-calculation.html" rel="alternate"></link><published>2015-01-13T16:34:00+01:00</published><updated>2015-01-13T16:34:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2015-01-13:index.html/using-gaussian-do-ccsd-calculation.html</id><summary type="html">&lt;p&gt;gaussian ccsd&lt;/p&gt;</summary><content type="html">&lt;p&gt;a bash script for gaussian ccsd calculation. Cube files are generated from cc density for bader analysis. pseudopotential and basis set are input manually the data are got from EMSL database.&lt;/p&gt;
&lt;p&gt;The files(&lt;a href="index.html/codes/cal.sh"&gt;cal.sh&lt;/a&gt;, &lt;a href="index.html/codes/cubegen.in"&gt;cubegen.in&lt;/a&gt;, &lt;a href="index.html/codes/nacl_com.sh"&gt;nacl_com.sh&lt;/a&gt;,&lt;a href="index.html/codes/nacl_submit.sh"&gt;nacl_submit.sh&lt;/a&gt;)&lt;/p&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="misc"></category></entry><entry><title>simple awk and sed</title><link href="index.html/simple-awk-and-sed.html" rel="alternate"></link><published>2014-12-24T01:56:00+01:00</published><updated>2014-12-24T01:56:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-12-24:index.html/simple-awk-and-sed.html</id><summary type="html">&lt;p&gt;the simple use of awk and sed&lt;/p&gt;</summary><content type="html">&lt;p&gt;awk and sed are two powerful command line tools for text processing. The only usage I will use are these two. For all the other complicated tasks I would prefer to use python.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;awk &amp;#39;{print $1 &amp;quot; &amp;quot; $2 &amp;quot; &amp;quot; $3}&amp;#39; input &amp;gt; output

sed &amp;#39;s/wrong/right/&amp;#39; input &amp;gt; output

sed &amp;quot;/&amp;amp;word_after_which_to_insert/ r file_insert&amp;quot; template.inp &amp;gt; out.inp
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="awk"></category><category term="sed"></category></entry><entry><title>ase</title><link href="index.html/ase.html" rel="alternate"></link><published>2014-12-20T23:26:00+01:00</published><updated>2014-12-20T23:26:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-12-20:index.html/ase.html</id><summary type="html">&lt;p&gt;ase&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://wiki.fysik.dtu.dk/ase/index.html"&gt;ase&lt;/a&gt; is a python library for atomic simulation. It can be used with a lot of code from first principle to classical md codes. It would be a good toy and test ground for atomic simulation. I plan to use it to test some algorithm with lj potential built in.&lt;/p&gt;
&lt;p&gt;Here is the process for me to install it on killdevil.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;anaconda&lt;/span&gt;
&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="n"&gt;activate&lt;/span&gt; &lt;span class="n"&gt;my_root&lt;/span&gt;
&lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;ASE_TAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;https&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;svn&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fysik&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dtu&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dk&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;projects&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ase&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;tags&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;software&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ase&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;software&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ase&lt;/span&gt;
&lt;span class="n"&gt;svn&lt;/span&gt; &lt;span class="n"&gt;co&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt; &lt;span class="mi"&gt;3440&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;ASE_TAGS&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;3.8&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="n"&gt;ase&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.8&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;ln&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;software&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ase&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ase&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;3.8&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="n"&gt;ase&lt;/span&gt;
&lt;span class="c1"&gt;#export PYTHONPATH=$HOME/ase:$PYTHONPATH&lt;/span&gt;
&lt;span class="c1"&gt;#export PATH=$HOME/ase/tools:$PATH&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;ase&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="n"&gt;setup&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;py&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;yiy&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ase&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="n"&gt;yiy&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ase&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;
&lt;span class="n"&gt;python&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;from ase.test import test; test(verbosity=2, display=False)&amp;quot;&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;amp;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;tee&lt;/span&gt; &lt;span class="n"&gt;testase&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;log&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And I got the result of &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;----------------------------------------------------------------------
Ran 96 tests in 64.938s

OK
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now I can play around with it.&lt;/p&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="python"></category></entry><entry><title>doing global optimization with minima hopping algorithm with cp2k</title><link href="index.html/doing-global-optimization-with-minima-hopping-algorithm-with-cp2k.html" rel="alternate"></link><published>2014-12-20T23:26:00+01:00</published><updated>2014-12-20T23:26:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-12-20:index.html/doing-global-optimization-with-minima-hopping-algorithm-with-cp2k.html</id><summary type="html">&lt;p&gt;using cp2k doing MINHOP global optimization method&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://scitation.aip.org/content/aip/journal/jcp/120/21/10.1063/1.1724816"&gt;Minima hopping&lt;/a&gt; is an effecient global minimization method. It is implemented in cp2k code. I have tested it on LJ38 clusters and found it performed very well. It is easy to using all the force methods in cp2k, and also easy to using multiple cores and easy to restart.&lt;/p&gt;
&lt;p&gt;I copied and modified the input file in cp2k test examples.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;amp;GLOBAL
   PROJECT_NAME LJ38_minhop_1
   PROGRAM_NAME SWARM
   RUN_TYPE NONE
   SEED 42
&amp;amp;END GLOBAL

&amp;amp;SWARM
   BEHAVIOR GLOBAL_OPT
   NUMBER_OF_WORKERS 11
   MAX_ITER 50000
   &amp;amp;GLOBAL_OPT
     #E_TARGET -0.028421532
     #E_TARGET -0.397492331
     E_TARGET -0.173928427
     METHOD MINIMA_HOPPING
     &amp;amp;HISTORY
       ENERGY_PRECISION 1.0e-5
       FINGERPRINT_PRECISION 1.0e-2
     &amp;amp;END HISTORY
   &amp;amp;END GLOBAL_OPT
   #REPLAY_COMMUNICATION_LOG LJ38_minhop_1_old.comlog
&amp;amp;END SWARM


&amp;amp;MOTION
  &amp;amp;PRINT  ! IO is expensive, turning everything off
    &amp;amp;RESTART OFF
    &amp;amp;END RESTART
    &amp;amp;RESTART_HISTORY OFF
    &amp;amp;END RESTART_HISTORY
    &amp;amp;TRAJECTORY
     !ADD_LAST NUMERIC
      &amp;amp;EACH
        GEO_OPT -1
        MD -1
      &amp;amp;END EACH
    &amp;amp;END TRAJECTORY
  &amp;amp;END PRINT

  &amp;amp;MD
    ENSEMBLE NVE
    STEPS 1000
    TIMESTEP 0.5

    &amp;amp;VELOCITY_SOFTENING
      STEPS 20
      ALPHA 1.0
      DELTA 0.01
    &amp;amp;END VELOCITY_SOFTENING

    &amp;amp;PRINT
      &amp;amp;ENERGY OFF
      &amp;amp;END ENERGY
      &amp;amp;CENTER_OF_MASS OFF
      &amp;amp;END CENTER_OF_MASS
      &amp;amp;COEFFICIENTS OFF
      &amp;amp;END COEFFICIENTS
      &amp;amp;PROGRAM_RUN_INFO OFF
      &amp;amp;END PROGRAM_RUN_INFO
      &amp;amp;ROTATIONAL_INFO OFF
      &amp;amp;END ROTATIONAL_INFO
      &amp;amp;SHELL_ENERGY OFF
      &amp;amp;END SHELL_ENERGY
      &amp;amp;TEMP_KIND OFF
      &amp;amp;END TEMP_KIND
      &amp;amp;TEMP_SHELL_KIND OFF
      &amp;amp;END TEMP_SHELL_KIND
      FORCE_LAST .TRUE.
    &amp;amp;END PRINT
  &amp;amp;END MD

  &amp;amp;GEO_OPT
    OPTIMIZER CG
    MAX_ITER 300
    &amp;amp;CG
      MAX_STEEP_STEPS 3
      &amp;amp;LINE_SEARCH
        &amp;amp;GOLD
          INITIAL_STEP 1.0e-2
        &amp;amp;END GOLD
      &amp;amp;END LINE_SEARCH
    &amp;amp;END CG
    &amp;amp;BFGS
     TRUST_RADIUS [angstrom] 0.1
     USE_RAT_FUN_OPT  ! otherwise LJ particle sth. get too close.
     &amp;amp;RESTART OFF
     &amp;amp;END RESTART
    &amp;amp;END BFGS
    &amp;amp;PRINT
      &amp;amp;PROGRAM_RUN_INFO OFF
      &amp;amp;END PROGRAM_RUN_INFO
    &amp;amp;END PRINT
  &amp;amp;END GEO_OPT

&amp;amp;END MOTION

&amp;amp;FORCE_EVAL
 &amp;amp;PRINT
    &amp;amp;DISTRIBUTION OFF
    &amp;amp;END DISTRIBUTION
    &amp;amp;DISTRIBUTION1D OFF
    &amp;amp;END DISTRIBUTION1D
    &amp;amp;DISTRIBUTION2D OFF
    &amp;amp;END DISTRIBUTION2D
    &amp;amp;FORCES OFF
    &amp;amp;END FORCES
    &amp;amp;GRID_INFORMATION OFF
    &amp;amp;END GRID_INFORMATION
    &amp;amp;PROGRAM_RUN_INFO OFF
    &amp;amp;END PROGRAM_RUN_INFO
    &amp;amp;STRESS_TENSOR OFF
    &amp;amp;END STRESS_TENSOR
    &amp;amp;TOTAL_NUMBERS OFF
    &amp;amp;END TOTAL_NUMBERS
  &amp;amp;END PRINT


  METHOD FIST
  &amp;amp;MM
    &amp;amp;FORCEFIELD
     &amp;amp;SPLINE
        R0_NB 1.0E-10 ! solely MAX_SPLINE shall control spline range
        EMAX_SPLINE   [hartree]  1000
        EMAX_ACCURACY [hartree]  1000  ! yields r_min = 0.66 bohr
        EPS_SPLINE    [hartree] 1.0E-10   ! yields 1698 spline points
     &amp;amp;END SPLINE
      &amp;amp;NONBONDED
        &amp;amp;LENNARD-JONES
          atoms X X
          EPSILON [hartree] 0.001
          SIGMA 1.0
          RCUT 25.0
        &amp;amp;END LENNARD-JONES
      &amp;amp;END NONBONDED
      &amp;amp;CHARGE
        ATOM X
        CHARGE 0.0
      &amp;amp;END CHARGE
    &amp;amp;END FORCEFIELD
    &amp;amp;NEIGHBOR_LISTS
      GEO_CHECK OFF
    &amp;amp;END NEIGHBOR_LISTS
    &amp;amp;POISSON
      &amp;amp;EWALD
        EWALD_TYPE none
      &amp;amp;END EWALD
    &amp;amp;END POISSON
    &amp;amp;PRINT
      &amp;amp;DERIVATIVES OFF
      &amp;amp;END DERIVATIVES
      &amp;amp;DIPOLE OFF
      &amp;amp;END DIPOLE
      &amp;amp;EWALD_INFO OFF
      &amp;amp;END EWALD_INFO
      &amp;amp;FF_INFO OFF
      &amp;amp;END FF_INFO
      &amp;amp;FF_PARAMETER_FILE OFF
      &amp;amp;END FF_PARAMETER_FILE
      &amp;amp;ITER_INFO OFF
      &amp;amp;END ITER_INFO
      &amp;amp;NEIGHBOR_LISTS OFF
      &amp;amp;END NEIGHBOR_LISTS
      &amp;amp;PROGRAM_BANNER OFF
      &amp;amp;END PROGRAM_BANNER
      &amp;amp;PROGRAM_RUN_INFO OFF
      &amp;amp;END PROGRAM_RUN_INFO
      &amp;amp;SUBCELL OFF
      &amp;amp;END SUBCELL
    &amp;amp;END PRINT
  &amp;amp;END MM
  &amp;amp;SUBSYS
    &amp;amp;CELL
    ABC [angstrom] 50.0 50.0 50.0
      !PERIODIC NONE
   &amp;amp;END CELL

   &amp;amp;COORD
X  19.9299001112 19.950169551 19.8322640143
X  19.9729085751 19.9093309127 21.9394380813
X  19.8941562054 19.8941284049 24.0569837799
X  19.9695852658 20.05096174 26.0067040618
X  19.8674946895 21.8602000252 20.1915984374
X  19.8880139948 21.9536267685 22.0485106395
X  20.0129749414 21.8625405898 23.9870979205
X  20.082926774 22.0788992596 25.8572713695
X  20.1546207624 24.0025491948 19.8547537874
X  19.8031230442 24.0436048709 21.9106314379
X  19.9463916441 24.1839491879 23.8834113495
X  19.8704727285 24.16644628 25.8358148517
X  19.9838019218 25.9057999191 20.0560911995
X  20.1292145367 26.1581490664 22.0943715423
X  19.9781889658 26.083599068 24.0336864536
X  19.8883959013 25.8200957812 26.0366653688
X  21.8201260724 20.1242010293 19.8205288067
X  21.8505910349 19.9947362491 21.8404146774
X  21.8550273956 19.9254871471 24.1073006016
X  21.8959492318 19.9013788938 25.8664416645
X  22.1302099673 21.9272265398 19.9252007031
X  21.9102230055 22.1149858217 21.9240625018
X  22.199987559 22.1591700852 23.8318003313
X  21.9003367373 22.1293676776 25.9205476882
X  21.88906222 23.8016798271 19.8361992897
X  21.8178764403 23.959817666 22.139335581
X  22.0455507021 24.1606968111 23.9829670521
X  21.9423108666 23.979777561 26.0915224226
X  21.8720398156 26.0920668527 19.9883875322
X  22.1930798224 25.9151320315 22.018793157
X  21.8088496409 26.0005309843 23.9521645719
X  22.1819324474 26.1518318479 25.9325533822
X  23.9252010921 20.0182542645 19.8463786663
X  24.0939325405 20.1666761084 22.0954054271
X  23.9434446885 20.0072638668 24.1136432412
X  24.1239486847 20.1448454527 25.9584634081
X  23.8406670306 22.148328277 20.1143768668
X  24.1302214528 21.9474940966 22.0937869524
  &amp;amp;END COORD

    &amp;amp;TOPOLOGY
      CONNECTIVITY OFF
    &amp;amp;END TOPOLOGY

     &amp;amp;KIND X
        ELEMENT H
        MASS 1.0
     &amp;amp;END KIND
  &amp;amp;END SUBSYS
&amp;amp;END FORCE_EVAL
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here number of processors has to be NUMBER_OF_WORKERS * n + 1, n is any interger number.
So here is the running script for killdevil.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash -l&lt;/span&gt;
&lt;span class="c1"&gt;#BSUB -n 12&lt;/span&gt;
&lt;span class="c1"&gt;#BSUB -e err.%J&lt;/span&gt;
&lt;span class="c1"&gt;#BSUB -o out.%J&lt;/span&gt;

module load cp2k

/usr/mpi/intel/mvapich2-1.7/bin/mpiexec -np &lt;span class="m"&gt;12&lt;/span&gt; cp2k.popt -i LJ38_minhop_1.inp -o LJ38_minhop_1.out
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;If would like to restart a calculation I need to mv the comlog file, and uncomment REPLAY_COMMUNICATION_LOG command in the input file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mv LJ38_minhop_1.comlog LJ38_minhop_1_old.comlog
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here is the scripts for plotting the local minimum and global minimum versus timesteps.&lt;/p&gt;
&lt;p&gt;make_figure.sh&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash -l&lt;/span&gt;
module load gnuplot
bash grep_energys.sh
gnuplot plot.gplt
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;grep_energys.sh&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;grep &amp;quot; GLBOPT| Reported potential energy&amp;quot; LJ38_minhop_1.out | awk &amp;#39;{print $6 }&amp;#39; &amp;gt; 1
grep &amp;quot;GLBOPT| Lowest reported potential energy&amp;quot; LJ38_minhop_1.out | awk &amp;#39;{print $7 }&amp;#39; &amp;gt; 2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;plot.gplt&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="c1"&gt;#set terminal postscript&lt;/span&gt;
&lt;span class="c1"&gt;#set output &amp;quot;test.ps&amp;quot;&lt;/span&gt;
&lt;span class="s s-Atom"&gt;set&lt;/span&gt; &lt;span class="s s-Atom"&gt;terminal&lt;/span&gt; &lt;span class="s s-Atom"&gt;png&lt;/span&gt;
&lt;span class="s s-Atom"&gt;set&lt;/span&gt; &lt;span class="s s-Atom"&gt;output&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;test.png&amp;quot;&lt;/span&gt;
&lt;span class="s s-Atom"&gt;set&lt;/span&gt; &lt;span class="s s-Atom"&gt;yrange&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.175&lt;/span&gt;&lt;span class="p"&gt;:-&lt;/span&gt;&lt;span class="mf"&gt;0.160&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s s-Atom"&gt;set&lt;/span&gt; &lt;span class="s s-Atom"&gt;trange&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;50000&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s s-Atom"&gt;set&lt;/span&gt; &lt;span class="s s-Atom"&gt;xrange&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="s s-Atom"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;10000&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="s s-Atom"&gt;set&lt;/span&gt; &lt;span class="s s-Atom"&gt;parametric&lt;/span&gt;
&lt;span class="s s-Atom"&gt;const=-&lt;/span&gt;&lt;span class="mf"&gt;0.173928427&lt;/span&gt;

&lt;span class="s s-Atom"&gt;p&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;1&amp;quot;&lt;/span&gt; &lt;span class="s s-Atom"&gt;u&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;2&amp;quot;&lt;/span&gt; &lt;span class="s s-Atom"&gt;u&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="s s-Atom"&gt;w&lt;/span&gt; &lt;span class="s s-Atom"&gt;l&lt;/span&gt; &lt;span class="s s-Atom"&gt;lw&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s s-Atom"&gt;const&lt;/span&gt; &lt;span class="s s-Atom"&gt;w&lt;/span&gt; &lt;span class="s s-Atom"&gt;l&lt;/span&gt; &lt;span class="s s-Atom"&gt;lw&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And I post the output plot here.
&lt;img alt="Alt Text" src="index.html/images/cp2k_lj38_minhop.png"&gt;&lt;/p&gt;
&lt;p&gt;To get the minimal energy structures out, I wrote a script. The script will output the structures with the order from low energy to high energy.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;f = file(&amp;quot;LJ38_minhop_1.comlog&amp;quot;)
read = False
Epot_positions = []
Epot_position = []
while True:
    line = f.readline()
    if len(line) == 0:
        break
    if &amp;quot;Epot&amp;quot; in line:
        read = True
        line = f.readline()
        line = f.readline()
        words = line.split()
        Epot = float(words[1])
        Epot_position.append(Epot)
    if &amp;quot;size&amp;quot; in line and read == True:
        read = False
        words = line.split()
        natoms = int(words[1])/3
        positions = []
        for i in range(natoms):
            line = f.readline()
            x = float(line) / 1.889725989
            line = f.readline()
            y = float(line) / 1.889725989
            line = f.readline()
            z = float(line) / 1.889725989
            position = [x,y,z]
            positions.append(position)
        Epot_position.append(positions)
        Epot_positions.append(Epot_position)
        Epot_position = []
        #print natoms
        #print &amp;quot;Epot: &amp;quot; , Epot
        #for i in range(natoms):
        #    print &amp;quot;X&amp;quot;, positions[i][0], positions[i][1], positions[i][2]

Epot_positions_sorted = sorted(Epot_positions , key = lambda Epot_position: Epot_position[0])

Epot = Epot_positions_sorted[0][0] - 1
for j in range(len(Epot_positions_sorted)):
    if Epot_positions_sorted[j][0] - Epot &amp;gt; 1e-5:
        Epot = Epot_positions_sorted[j][0]
        print natoms
        print &amp;quot;Epot: &amp;quot; , Epot_positions_sorted[j][0]
        for i in range(natoms):
            positions = Epot_positions_sorted[j][1]
            print &amp;quot;X&amp;quot;,positions[i][0], positions[i][1], positions[i][2]
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The two lowest energy structure are here with the energy of -0.173928415115, and -0.173252366954.
Here are the structures of them.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Alt Text" src="index.html/images/cp2k_lj38_minhop_min2.png"&gt;
&lt;img alt="Alt Text" src="index.html/images/cp2k_lj38_minhop_min1.png"&gt;&lt;/p&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="molecular dynamics"></category></entry><entry><title>using horton do esp charge analysis</title><link href="index.html/using-horton-do-esp-charge-analysis.html" rel="alternate"></link><published>2014-12-15T13:50:00+01:00</published><updated>2014-12-15T13:50:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-12-15:index.html/using-horton-do-esp-charge-analysis.html</id><summary type="html">&lt;p&gt;horton esp&lt;/p&gt;</summary><content type="html">&lt;p&gt;In order to do esp charge analysis, I generate charge density cube file and electric potential cube file from cp2k (with GPW method, GAPW method has a problem generate charge density cube file). I post here the steps I use horton and these cube files to do esp charge analysis (follow this &lt;a href="http://theochem.github.io/horton/tut_espfit.html"&gt;link&lt;/a&gt; ).&lt;/p&gt;
&lt;p&gt;Here is how I use it on killdevil.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;anaconda&lt;/span&gt;
&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="n"&gt;activate&lt;/span&gt; &lt;span class="n"&gt;my_root&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here is the input file for cp2k.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;@SET RTYPE  MD
@SET RESTART  ON
@SET RESTARTFILE H2O64NaCl-1_500.restart
@SET MD_ENS NVT

&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;FORCE_EVAL
  METHOD QS
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;PROPERTIES
    #&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;RESP
    #  STRIDE 1 1 1
    #&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END RESP
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;FIT_CHARGE
      FILENAME =NaCl_NVT_fit_charge
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END FIT_CHARGE
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END PROPERTIES
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;DFT
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;DENSITY_FITTING
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END DENSITY_FITTING
    BASIS_SET_FILE_NAME ../../../cp2k-files/BASIS_MOLOPT
    POTENTIAL_FILE_NAME ../../../cp2k-files/GTH_POTENTIALS
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;MGRID
      NGRIDS 5
      CUTOFF 280
      REL_CUTOFF 40
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END MGRID
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;SCF
      @IF ( &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;RESTART&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; == OFF )
        SCF_GUESS ATOMIC
      @ENDIF
      @IF ( &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;RESTART&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; == ON )
        SCF_GUESS RESTART
      @ENDIF
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;OT ON
        MINIMIZER DIIS
        ENERGY_GAP 0.001
        PRECONDITIONER FULL_ALL
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END OT
      EPS_SCF      1.0E-6
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;PRINT
        &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;RESTART
        &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END SCF
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;QS
      EXTRAPOLATION PS
      EXTRAPOLATION_ORDER 3
      METHOD GPW
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END QS
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;XC
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;XC_FUNCTIONAL BLYP
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END XC_FUNCTIONAL

      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;XC_GRID
        XC_SMOOTH_RHO NN50
        XC_DERIV NN50_SMOOTH
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END

      #&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;vdW_POTENTIAL
      #   POTENTIAL_TYPE PAIR_POTENTIAL
      #   &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;PAIR_POTENTIAL
      #      TYPE DFTD3
      #      PARAMETER_FILE_NAME ../../cp2k-files/dftd3.dat
      #      REFERENCE_FUNCTIONAL revPBE
      #   &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END PAIR_POTENTIAL
      #&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END vdW_POTENTIAL

    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END XC
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;PRINT
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;E_DENSITY_CUBE
        &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;EACH
          MD 100
        &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END EACH
        STRIDE 1 1 1
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END E_DENSITY_CUBE
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;V_HARTREE_CUBE
        &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;EACH
          MD 100
        &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END EACH
        STRIDE 1 1 1
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END V_HARTREE_CUBE
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;MULLIKEN
        &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;EACH
          MD 100
        &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END EACH
      FILENAME =NaCl_NVT_mulliken
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END MULLIKEN
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;LOWDIN
        &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;EACH
          MD 100
        &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END EACH
      FILENAME =NaCl_NVT_lowdin
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END LOWDIN
      #&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;HIRSCHFELD
      #  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;EACH
      #    MD 100
      #  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END EACH
      #FILENAME =NaCl_NVT_hirschfeld
      #&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END HIRSCHFELD
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END PRINT
    #&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;LOCALIZE
    #  METHOD JACOBI
    #  #MAX_CRAZY_ANGLE 1.0
    #  MAX_ITER 100
    #  #EPS_LOCALIZATION 1E-8
    #  #MAX_CRAZY_ANGLE 0.05
    #  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;PRINT
    #    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;WANNIER_CENTERS
    #      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;EACH
    #        MD 100
    #      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END EACH
    #      FILENAME =NaCl_NVT_wannier_centers.xyz
    #      IONS+CENTERS
    #    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END WANNIER_CENTERS
    #    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;WANNIER_SPREADS
    #      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;EACH
    #        MD 100
    #      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END EACH
    #      FILENAME =NaCl_NVT_wannier_spread.data
    #    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END WANNIER_SPREADS
    #  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END PRINT
    #  USE_HISTORY
    #&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END LOCALIZE
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END DFT
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;SUBSYS
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;CELL
      ABC 12.4934 12.4934 12.4934
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END CELL
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;TOPOLOGY
      COORD_FILE_NAME  H2O64NaCl.xyz
      COORD_FILE_FORMAT xyz
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END TOPOLOGY
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;COLVAR
     &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;DISTANCE
       ATOMS 193 194
     &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END DISTANCE
     &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;PRINT
     &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END COLVAR
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;KIND H
      BASIS_SET DZVP-MOLOPT-SR-GTH-q1
      POTENTIAL GTH-BLYP-q1
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END KIND
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;KIND O
      BASIS_SET DZVP-MOLOPT-SR-GTH-q6
      POTENTIAL GTH-BLYP-q6
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END KIND
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;KIND Na
      BASIS_SET DZVP-MOLOPT-SR-GTH-q9
      POTENTIAL GTH-BLYP-q9
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END KIND
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;KIND Cl
      BASIS_SET DZVP-MOLOPT-SR-GTH-q7
      POTENTIAL GTH-BLYP-q7
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END KIND
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END SUBSYS
&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END FORCE_EVAL

&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;GLOBAL
  PROJECT_NAME H2O64NaCl
  RUN_TYPE MD
  PRINT_LEVEL LOW

  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;TIMINGS
     THRESHOLD 0.000001
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END

  #WALLTIME 172500
  #WALLTIME 345000
  WALLTIME 1750

&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END GLOBAL

&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;MOTION
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;CONSTRAINT
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;COLLECTIVE
      COLVAR 1
      INTERMOLECULAR
      TARGET [angstrom] 2.2
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END COLLECTIVE
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;LAGRANGE_MULTIPLIERS
      COMMON_ITERATION_LEVELS 1
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END CONSTRAINT
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;MD
    @IF ( &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;MD_ENS&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; == NVE )
      ENSEMBLE NVE
    @ENDIF
    @IF ( &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;MD_ENS&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; == NVT )
      ENSEMBLE NVT
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;THERMOSTAT
        REGION GLOBAL
        TYPE NOSE
        &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;NOSE
        &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END NOSE
      &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END THERMOSTAT
    @ENDIF
    STEPS 1
    TIMESTEP 0.5
    TEMPERATURE 298.0
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END MD
  #&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;PRINT
  #    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;TRAJECTORY  SILENT
  #    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;EACH
  #      MD 1
  #    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END EACH
  #    FILENAME =NaCl_NVT.xyz
  #  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END TRAJECTORY
  #  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;RESTART
  #    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;EACH
  #      MD 1
  #    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END EACH
  #    ADD_LAST NUMERIC
  #  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END RESTART
  #  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;VELOCITIES
  #    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;EACH
  #      MD 1
  #    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END EACH
  #    FILENAME =NaCl_NVT_vel.xyz
  #  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END VELOCITIES
  #  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;FORCES
  #    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;EACH
  #      MD 1
  #    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END EACH
  #    FILENAME =NaCl_NVT_frc.xyz
  #  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END FORCES
  #&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END PRINT
&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END MOTION

&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;EXT_RESTART ON
  RESTART_DEFAULT F
  RESTART_FILE_NAME &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;RESTARTFILE&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
  RESTART_POS T
  RESTART_COUNTERS F
  @IF ( &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;RTYPE&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; == MD )
    RESTART_VEL T
  @ENDIF
  @IF ( &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;MD_ENS&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt; == NVT )
    RESTART_THERMOSTAT T
  @ENDIF
&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END EXT_RESTART
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The cube files I have are H2O64NaCl-ELECTRON_DENSITY-1_0.cube and H2O64NaCl-v_hartree-1_0.cube. &lt;/p&gt;
&lt;p&gt;This command is used to generate the cost function.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;horton-esp-cost.py H2O64NaCl-v_hartree-1_0.cube cost.h5 --wdens=H2O64NaCl-ELECTRON_DENSITY-1_0.cube -s --wnear 8:2.0:2.0 1:2.0:2.0 11:2.0:2.0 17:2.0:2.0 --pbc=111 &amp;gt; esp-cost-out
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;It took me 6 hours to generate the cost function. After that, charges are fitted to the esp by this command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;horton-esp-fit.py cost.h5 charges.h5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Transfer it to csv file to read.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;horton-hdf2csv.py charges.h5 charges.csv
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="python"></category></entry><entry><title>using horton do hirshfeld charge analysis</title><link href="index.html/using-horton-do-hirshfeld-charge-analysis.html" rel="alternate"></link><published>2014-12-09T23:34:00+01:00</published><updated>2014-12-09T23:34:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-12-09:index.html/using-horton-do-hirshfeld-charge-analysis.html</id><summary type="html">&lt;p&gt;horton hirshfeld&lt;/p&gt;</summary><content type="html">&lt;p&gt;In order to do hirshfeld charge analysis, I generate charge density cube file from cp2k (with GPW method, GAPW method has a problem generate charge density cube file). I post here the steps I use horton and this cube file to do hirshfeld charge analysis (follow this &lt;a href="http://theochem.github.io/horton/tut_part.html#id32"&gt;link&lt;/a&gt; ).&lt;/p&gt;
&lt;p&gt;Here is how I use it on killdevil.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;anaconda&lt;/span&gt;
&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="n"&gt;activate&lt;/span&gt; &lt;span class="n"&gt;my_root&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;First, I need to set up a database for proatoms. I am using cp2k for atom calculation. I need H, O, Na, Cl in my system. So I generate the input files like this.&lt;/p&gt;
&lt;p&gt;ppot.inc ( XXX_000_00 XXX stands for element number, GTH-PBE-qX which is the name of the pseudopotential)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;001_000_00 GTH-PBE-q0
008_000_00 GTH-PBE-q6
011_000_00 GTH-PBE-q9
017_000_00 GTH-PBE-q7
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;valence.inc ( NNN_PPP_MM NNN: element number. PPP: atomic population(#electon). MM: spin multiplicity(2S+1) 1s2 2p1: orbital occupations)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;001_001_02 1s1
001_002_01 1s2

008_005_02 1s2 2p1
008_006_03 1s2 2p2
008_007_04 1s2 2p3
008_008_03 1s2 2p4
008_009_02 1s2 2p5
008_010_01 1s2 2p6

011_005_02 1s2 2p1
011_006_03 1s2 2p2
011_007_04 1s2 2p3
011_008_03 1s2 2p4
011_009_02 1s2 2p5
011_010_01 1s2 2p6
011_011_02 1s2 2p6 2s1
011_012_01 1s2 2p6 2s2
011_013_02 1s2 2p6 2s2 3p1

017_013_02 1s2 2p1
017_014_03 1s2 2p2
017_015_04 1s2 2p3
017_016_03 1s2 2p4
017_017_02 1s2 2p5
017_018_01 1s2 2p6
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;template.inp&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;GLOBAL
  PROJECT ATOM
  PROGRAM_NAME ATOM
&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END GLOBAL
&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;ATOM
  ATOMIC_NUMBER &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;number&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
  ELECTRON_CONFIGURATION (&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;mult&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;) CORE &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;valence&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inc&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
  CORE none

  MAX_ANGULAR_MOMENTUM 1
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;METHOD
     METHOD_TYPE UKS
     &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;XC
       &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;XC_FUNCTIONAL PBE
         &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;PBE
           PARAMETRIZATION REVPBE
         &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END PBE
       &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END XC_FUNCTIONAL
     &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END XC
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END METHOD
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;POTENTIAL
      PSEUDO_TYPE GTH
      POTENTIAL_FILE_NAME ../../PBE_PSEUDOPOTENTIALS
      POTENTIAL_NAME &lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ppot&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;inc&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END POTENTIAL
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;PP_BASIS
      BASIS_SET_FILE_NAME ../../BASIS_MOLOPT
      BASIS_TYPE CONTRACTED_GTO
      BASIS_SET DZVP-MOLOPT-SR-GTH
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END PP_BASIS
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;PRINT
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;BASIS_SET ON
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;ORBITALS ON
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;POTENTIAL ON
    &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END
  &lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END
&lt;span class="err"&gt;&amp;amp;&lt;/span&gt;END ATOM
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After preparing these files. I do&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;horton-atomdb.py input cp2k 1,8,11,17 template.inp
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will generate several folders and a run_cp2k.sh file. In order to run it on hopper (which supercomputer I use for cp2k) I add several lines in the head of this file.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;
&lt;span class="c1"&gt;#PBS -N myjob &lt;/span&gt;
&lt;span class="c1"&gt;###PBS -q regular&lt;/span&gt;
&lt;span class="c1"&gt;#PBS -q debug&lt;/span&gt;
&lt;span class="c1"&gt;#PBS -l mppwidth=24&lt;/span&gt;
&lt;span class="c1"&gt;###PBS -l walltime=96:00:00&lt;/span&gt;
&lt;span class="c1"&gt;#PBS -l walltime=00:30:00&lt;/span&gt;
&lt;span class="c1"&gt;#PBS -j oe&lt;/span&gt;
&lt;span class="c1"&gt;#PBS -V&lt;/span&gt;

&lt;span class="c1"&gt;# Note: if you want to use an mpi-parallel CP2K binary, uncomment the following&lt;/span&gt;
&lt;span class="c1"&gt;# line and fill in the right binary and mpirun script:&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="nv"&gt;$PBS_O_WORKDIR&lt;/span&gt;
module load cp2k/2.5.1
&lt;span class="c1"&gt;#CP2K_BIN=&amp;quot;mpirun -n4 cp2k.popt&amp;quot;&lt;/span&gt;
&lt;span class="nv"&gt;CP2K_BIN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;aprun -n 24 cp2k.popt&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Then I do&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;qsub run_cp2k.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After the calculations are done, I copy the folder back to killdevil and using horton again. This will generate a atom.h5 file for hirshfeld calculation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;horton-atomdb.py convert
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, I copy atom.h5 file and the cube file from cp2k calculation to another folder. I also modify the cube file based on the 3.4.1 in the &lt;a href="http://theochem.github.io/horton/tut_part.html#id32"&gt;manual&lt;/a&gt;. The command I use for the real calculation is &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;horton-cpart.py cube output.h5:group {h,hi,he} atoms.h5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;h, hi, he stands for different partitioning schemes.&lt;/p&gt;
&lt;p&gt;To make the result readable, there is a tool to convert h5 file to csv file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;horton-hdf2csv.py output.h5 output.csv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The information I got based on hirshfeld analysis are in the file of output.csv.&lt;/p&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="python"></category></entry><entry><title>horton</title><link href="index.html/horton.html" rel="alternate"></link><published>2014-12-09T00:09:00+01:00</published><updated>2014-12-09T00:09:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-12-09:index.html/horton.html</id><summary type="html">&lt;p&gt;horton&lt;/p&gt;</summary><content type="html">&lt;p&gt;horton is a development platform for electronic structure methods. It can do electronic density partition with different methods. I am trying to install it on killdevil, now.&lt;/p&gt;
&lt;p&gt;Here is how I use it on killdevil.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;anaconda&lt;/span&gt;
&lt;span class="k"&gt;module&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;gcc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;4.8.1&lt;/span&gt;
&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="n"&gt;activate&lt;/span&gt; &lt;span class="n"&gt;my_root&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; ~/&lt;span class="n"&gt;software&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="n"&gt;horton&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;horton&lt;/span&gt;
&lt;span class="n"&gt;wget&lt;/span&gt; &lt;span class="n"&gt;https:&lt;/span&gt;//&lt;span class="n"&gt;github&lt;/span&gt;.&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;theochem&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;horton&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;releases&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;download&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;1.2.1&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;horton-1&lt;/span&gt;&lt;span class="mf"&gt;.2.1&lt;/span&gt;.&lt;span class="n"&gt;tar&lt;/span&gt;.&lt;span class="n"&gt;gz&lt;/span&gt;
&lt;span class="n"&gt;tar&lt;/span&gt; -&lt;span class="n"&gt;xzvf&lt;/span&gt; &lt;span class="n"&gt;horton-1&lt;/span&gt;&lt;span class="mf"&gt;.2.1&lt;/span&gt;.&lt;span class="n"&gt;tar&lt;/span&gt;.&lt;span class="n"&gt;gz&lt;/span&gt;
&lt;span class="n"&gt;cd&lt;/span&gt; &lt;span class="n"&gt;horton-1&lt;/span&gt;&lt;span class="mf"&gt;.2.1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I think anaconda has all packages needed for horton.&lt;/p&gt;
&lt;p&gt;Then I do.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd depends
make libint
make libxc
cd ..
./setup.py install --user
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After I do the tests,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd ~
nosetests -v horton
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I got,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;----------------------------------------------------------------------
Ran 755 tests in 386.921s

OK
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This means I have succesfully install horton.&lt;/p&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="python"></category></entry><entry><title>lis write matrix</title><link href="index.html/lis-write-matrix.html" rel="alternate"></link><published>2014-12-04T14:56:00+01:00</published><updated>2014-12-04T14:56:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-12-04:index.html/lis-write-matrix.html</id><summary type="html">&lt;p&gt;using lis to write a matrix instead of read from file&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://www.ssisc.org/lis/"&gt;lis&lt;/a&gt; is a parallel iterative solvers library for linear systems. Instead of read matrix from files, write matrix information directly in the code is useful. I tested it and gave an example here. The matrix is stored in csr form and distributed in all the cpus.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;lis_config.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;lis.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="n"&gt;LIS_INT&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INT&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="n"&gt;LIS_MATRIX&lt;/span&gt;  &lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;LIS_VECTOR&lt;/span&gt;  &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;LIS_SOLVER&lt;/span&gt;  &lt;span class="n"&gt;solver&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;LIS_INT&lt;/span&gt;     &lt;span class="n"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="kt"&gt;double&lt;/span&gt;      &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;LIS_INT&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;gn&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;nnz&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;my_rank&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;LIS_INT&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;row&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;col&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;LIS_SCALAR&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="n"&gt;lis_initialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="n"&gt;lis_matrix_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_COMM_WORLD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lis_vector_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_COMM_WORLD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lis_vector_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_COMM_WORLD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;gn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;lis_matrix_set_size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;gn&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lis_matrix_get_size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gn&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lis_matrix_get_range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;4.11418428571&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;25.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.000345454479536&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.000345454479536&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.000345454479536&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;0.000345454479536&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mf"&gt;4.11418428571&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_matrix_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lis_matrix_assemble&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;



  &lt;span class="n"&gt;lis_vector_duplicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lis_vector_set_all&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lis_vector_get_range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ie&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;is&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;lis_vector_set_value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;LIS_INS_VALUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;5.04&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lis_output_vector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LIS_FMT_MM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="n"&gt;lis_vector_duplicate&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="n"&gt;lis_solver_create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;solver&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lis_solver_set_optionC&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;solver&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lis_solve&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;solver&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lis_solver_get_iter&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;solver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lis_solver_get_time&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;solver&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;number of iterations = %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iter&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;elapsed time = %e&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;time&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="n"&gt;lis_output_vector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;LIS_FMT_MM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;

  &lt;span class="n"&gt;lis_solver_destroy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;solver&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lis_matrix_destroy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lis_vector_destroy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;lis_vector_destroy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="n"&gt;lis_finalize&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And here is the Makefile.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;CC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;mpicc
&lt;span class="c"&gt;#CFLAGS=-c -Wall&lt;/span&gt;
&lt;span class="c"&gt;#LDFLAGS=&lt;/span&gt;
&lt;span class="c"&gt;#CFLAGS=-c -Wall -I/nas02/home/y/i/yiy/software/lis/lis-1.4.61-build/include&lt;/span&gt;
&lt;span class="nv"&gt;CFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-DHAVE_CONFIG_H -I. -I/nas02/home/y/i/yiy/software/lis/lis-1.4.61/include  -I/nas02/home/y/i/yiy/software/lis/lis-1.4.61/   -O3 -ansi_alias  -DUSE_MPI -c
&lt;span class="c"&gt;#LDFLAGS=-L/nas02/home/y/i/yiy/software/lis/lis-1.4.61-build/lib -llis&lt;/span&gt;
&lt;span class="nv"&gt;LDFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-L/nas02/home/y/i/yiy/software/lis/lis-1.4.61/src /nas02/home/y/i/yiy/software/lis/lis-1.4.61/src/.libs/liblis.a -lm
&lt;span class="nv"&gt;SOURCES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;test_wiki.c
&lt;span class="nv"&gt;OBJECTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;SOURCES:.c&lt;span class="o"&gt;=&lt;/span&gt;.o&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;EXECUTABLE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;

&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;SOURCES&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;EXECUTABLE&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nf"&gt;$(EXECUTABLE)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;OBJECTS&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;CC&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;OBJECTS&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;LDFLAGS&lt;span class="k"&gt;)&lt;/span&gt;  -o &lt;span class="nv"&gt;$@&lt;/span&gt;

&lt;span class="nf"&gt;.c.o&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;CC&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;CFLAGS&lt;span class="k"&gt;)&lt;/span&gt; $&amp;lt; -o &lt;span class="nv"&gt;$@&lt;/span&gt;

&lt;span class="nf"&gt;clean&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    rm -rf *o &lt;span class="nb"&gt;test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I can run the exe in serial and parallel.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;./test b x
mpiexec -n 2 ./test b x
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;However when the number of cpus is larger than the number of rows in A matrix the program will stuck. I am contacting lis developers to see if there is something wrong with the code.&lt;/p&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="parallel computing"></category></entry><entry><title>combine arrays on different cores</title><link href="index.html/combine-arrays-on-different-cores.html" rel="alternate"></link><published>2014-12-04T13:40:00+01:00</published><updated>2014-12-04T13:40:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-12-04:index.html/combine-arrays-on-different-cores.html</id><summary type="html">&lt;p&gt;using MPI_Allgatherv to combine arrays on different cores&lt;/p&gt;</summary><content type="html">&lt;p&gt;The way to combine arrays in different cores to a big array by MPI is using MPI_Allgatherv. An example I would like to test is like this.&lt;/p&gt;
&lt;p&gt;Core 1 : 1&lt;/p&gt;
&lt;p&gt;Core 2 : 2 2&lt;/p&gt;
&lt;p&gt;Core 3 : 3 3 3&lt;/p&gt;
&lt;p&gt;Core 4 : 4 4 4 4&lt;/p&gt;
&lt;p&gt;Core 5 ...&lt;/p&gt;
&lt;p&gt;After combine all the arrays, I will get&lt;/p&gt;
&lt;p&gt;1 2 2 3 3 3 4 4 4 4 5 5 ...&lt;/p&gt;
&lt;p&gt;Here is the code(test_allgatherv.c) and Makefile for this calculation. Pay attention to displ_list.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;quot;mpi.h&amp;quot;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;#include&lt;/span&gt; &lt;span class="cpf"&gt;&amp;lt;stdlib.h&amp;gt;&lt;/span&gt;&lt;span class="cp"&gt;&lt;/span&gt;

&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;char&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;[])&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;

  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;my_rank&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// MPI rank&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// MPI size&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; 
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;local_array&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// array in local core &lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;local_num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// num of elements in local array&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;local_num_list&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// the list of local_num &lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;displ_list&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// the displ_list of global_array&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;global_array&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// array in global&lt;/span&gt;
  &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;global_num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;// sum of local_num&lt;/span&gt;

  &lt;span class="c1"&gt;// MPI related variables&lt;/span&gt;
  &lt;span class="n"&gt;MPI_Init&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;argc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;argv&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;MPI_Comm_rank&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MPI_COMM_WORLD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;my_rank&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;MPI_Comm_size&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MPI_COMM_WORLD&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// generate local array&lt;/span&gt;
  &lt;span class="n"&gt;local_num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;my_rank&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="n"&gt;local_array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;malloc&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;local_num&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;local_num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;local_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;local_num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d &lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;local_num&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="c1"&gt;// calculate global_num = sum[local_num]&lt;/span&gt;
  &lt;span class="n"&gt;MPI_Allreduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;local_num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;global_num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MPI_INT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MPI_SUM&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MPI_COMM_WORLD&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// using MPI_Allgatherv the calculation of displ_list is a little tricky&lt;/span&gt;
  &lt;span class="n"&gt;global_array&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;malloc&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;global_num&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="n"&gt;displ_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;malloc&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="n"&gt;local_num_list&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="n"&gt;malloc&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
  &lt;span class="n"&gt;MPI_Allgather&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;local_num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MPI_INT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;local_num_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MPI_INT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MPI_COMM_WORLD&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="n"&gt;displ_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;displ_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;displ_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;local_num_list&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;MPI_Allgatherv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;local_array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;local_num&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MPI_INT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;global_array&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;local_num_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;displ_list&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MPI_INT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;MPI_COMM_WORLD&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

  &lt;span class="c1"&gt;// output the global_array&lt;/span&gt;
  &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;my_rank&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
    &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;after MPI_Allgatherv&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;global_num&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
      &lt;span class="n"&gt;printf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%d %d&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;global_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="n"&gt;MPI_Finalize&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And the Makefile.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;CC&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;mpicc
&lt;span class="nv"&gt;CFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;-c -Wall
&lt;span class="nv"&gt;LDFLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;
&lt;span class="nv"&gt;SOURCES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;test_allgatherv.c
&lt;span class="nv"&gt;OBJECTS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;SOURCES:.c&lt;span class="o"&gt;=&lt;/span&gt;.o&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;EXECUTABLE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;test_allgatherv

&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;SOURCES&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;EXECUTABLE&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="nf"&gt;$(EXECUTABLE)&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;OBJECTS&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;CC&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;LDFLAGS&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;OBJECTS&lt;span class="k"&gt;)&lt;/span&gt; -o &lt;span class="nv"&gt;$@&lt;/span&gt;

&lt;span class="nf"&gt;.c.o&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;$(&lt;/span&gt;CC&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;CFLAGS&lt;span class="k"&gt;)&lt;/span&gt; $&amp;lt; -o &lt;span class="nv"&gt;$@&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;After compiling, run the job by&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mpirun -n 8 ./test_allgatherv
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I got the correct result&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;1 
2 
2 
4 
4 
4 
4 
5 
5 
5 
5 
5 
8 
8 
8 
8 
8 
8 
8 
8 
3 
3 
3 
6 
6 
6 
6 
6 
6 
7 
7 
7 
7 
7 
7 
7 
after MPI_Allgatherv
0 1
1 2
2 2
3 3
4 3
5 3
6 4
7 4
8 4
9 4
10 5
11 5
12 5
13 5
14 5
15 6
16 6
17 6
18 6
19 6
20 6
21 7
22 7
23 7
24 7
25 7
26 7
27 7
28 8
29 8
30 8
31 8
32 8
33 8
34 8
35 8
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="parallel computing"></category></entry><entry><title>mdtraj</title><link href="index.html/mdtraj.html" rel="alternate"></link><published>2014-12-02T16:08:00+01:00</published><updated>2014-12-02T16:08:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-12-02:index.html/mdtraj.html</id><summary type="html">&lt;p&gt;mdtraj&lt;/p&gt;</summary><content type="html">&lt;p&gt;mdtraj is a python library to read, write and analyze MD trajectories. Here is its &lt;a href="http://http://mdtraj.org"&gt;website&lt;/a&gt;. It can be easy installed by conda and has the function to calculate distance for particles with periodic boundary conditions.&lt;/p&gt;
&lt;p&gt;Here is how I use it on killdevil.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;anaconda&lt;/span&gt;
&lt;span class="n"&gt;module&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="n"&gt;gcc&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mf"&gt;4.8&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="n"&gt;activate&lt;/span&gt; &lt;span class="n"&gt;my_root&lt;/span&gt;
&lt;span class="n"&gt;ipython&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;mdtraj&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="python"></category></entry><entry><title>dissipative particle dynamics of membrane from scratch</title><link href="index.html/dissipative-particle-dynamics-of-membrane-from-scratch.html" rel="alternate"></link><published>2014-11-25T13:44:00+01:00</published><updated>2014-11-25T13:44:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-11-25:index.html/dissipative-particle-dynamics-of-membrane-from-scratch.html</id><summary type="html">&lt;p&gt;Learning dissipative particle dynamics by lammps&lt;/p&gt;</summary><content type="html">&lt;p&gt;I perform a test dpd simulation of membrane started from the generation of structures. packmol is used for generate the input structure. lammps is used as the simulator. &lt;/p&gt;
&lt;p&gt;The lipid structure is as follow(lipid.xyz):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;11

C 0.0 0.0 0.0
C 0.5 0.0 0.0
C 1.0 0.0 0.0
C 1.5 0.0 0.0
C 0.0 0.6 0.0
C 0.5 0.6 0.0
C 1.0 0.6 0.0
C 1.5 0.6 0.0
H 2.0 0.0 0.0
H 2.0 0.5 0.0
H 2.5 0.0 0.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which is like the pic shown below.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Alt Text" src="index.html/images/lipid.png"&gt;&lt;/p&gt;
&lt;p&gt;also a water sturcture is listed(water.xyz). Because only one particle will represent one water.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;1

W 0.0 0.0 0.0
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;a packmol input(bilayer_packmol.in) script is used here to generate the structure of the total system.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;tolerance 0.5
filetype xyz
output bilayer.xyz

structure lipid.xyz
  number 250
  inside box 0. 0. 10. 19.428 19.428 13.0
  atoms 1
    below plane 0. 0. 1. 10.5
  end atoms
  atoms 11
    over plane 0. 0. 1. 12.5
  end atoms
end structure

structure lipid.xyz
  number 250
  inside box 0. 0. 7.0 19.428 19.428 10.0
  atoms 1 5
    over plane 0. 0. 1. 9.5
  end atoms
  atoms 11
    below plane 0. 0. 1. 7.5
  end atoms
end structure

structure water.xyz
  number 8250
  inside box 0. 0. 12.5 19.428 19.428 19.428
end structure

structure water.xyz
  number 8250
  inside box 0. 0. 0. 19.428 19.428 7.5
end structure
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And also I have a script for the generation of psf and lammps data file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="x"&gt;mol new bilayer.xyz&lt;/span&gt;

&lt;span class="x"&gt;pbc set &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt; &lt;span class="m"&gt;19.428&lt;/span&gt; &lt;span class="m"&gt;19.428&lt;/span&gt; &lt;span class="m"&gt;19.428&lt;/span&gt; &lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;topo clearbonds&lt;/span&gt;
&lt;span class="x"&gt;for &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nf"&gt;set&lt;/span&gt; &lt;span class="na"&gt;i&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$i&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="m"&gt;500&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;&lt;span class="nf"&gt;incr&lt;/span&gt; &lt;span class="na"&gt;i&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt; &lt;/span&gt;&lt;span class="cp"&gt;{&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addbond&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addbond&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addbond&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addbond&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addbond&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addbond&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addbond&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addbond&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addbond&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addbond&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addangle&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addangle&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addangle&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addangle&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addangle&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
    &lt;span class="na"&gt;topo&lt;/span&gt; &lt;span class="na"&gt;addangle&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt; &lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="na"&gt;expr&lt;/span&gt; &lt;span class="nv"&gt;$i&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="cp"&gt;}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;

&lt;span class="x"&gt;animate write psf bilayer.psf&lt;/span&gt;
&lt;span class="x"&gt;topo writelammpsdata bilayer.data&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The final version of the input structure is showed as follow&lt;/p&gt;
&lt;p&gt;&lt;img alt="Alt Text" src="index.html/images/membrane.png"&gt;&lt;/p&gt;
&lt;p&gt;I use this structure for the input of DPD simulation, and the input file for lammps is as follow. &lt;/p&gt;
&lt;p&gt;The input files: &lt;a href="index.html/codes/bilayer.data"&gt;bilayer.data&lt;/a&gt;, &lt;a href="index.html/codes/dpd_test.in"&gt;dpd_test.in&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;units       lj
atom_style full
comm_modify vel yes
pair_style  dpd 1.0 1.0 34387

read_data bilayer.data
# create simulation box
#lattice     fcc 3
#region      mybox block -4 4 -4 4 -4 4 units lattice
#create_box  1 mybox
#create_atoms    1 box

# define masses and interaction coefficient
#mass        * 1
pair_coeff  1 1 10 4.5
pair_coeff  2 2 30 4.5
pair_coeff  3 3 25 4.5
pair_coeff  1 2 35 4.5
pair_coeff  1 3 75 4.5
pair_coeff  2 3 30 4.5

bond_style harmonic
bond_coeff 1 128.0 0.5

angle_style cosine/delta
angle_coeff 1 7.5 180.0

# create initial velocities
velocity    all create 1.0 4928459 dist gaussian

# change neighbor list parameters to avoid dangerous builds
neighbor    2.0 bin
neigh_modify    delay 3

# specify simulation parameters
timestep    0.04
thermo      10

# first equilibrate the initial condition
fix     1 all nve
run     500

dump traj all xtc  50 traj.xtc
dump_modify traj unwrap yes

dump traj_xyz all xyz 50 traj.xyz

# production run
run     50000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The result movie is shown as below&lt;/p&gt;
&lt;p&gt;&lt;img alt="Alt Text" src="index.html/images/dpd_movie.gif"&gt;&lt;/p&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="molecular dynamics"></category></entry><entry><title>using ipython notebook remotely over an ssh tunnel</title><link href="index.html/using-ipython-notebook-remotely-over-an-ssh-tunnel.html" rel="alternate"></link><published>2014-11-24T09:27:00+01:00</published><updated>2014-11-24T09:27:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-11-24:index.html/using-ipython-notebook-remotely-over-an-ssh-tunnel.html</id><summary type="html">&lt;p&gt;ipython&lt;/p&gt;</summary><content type="html">&lt;p&gt;ipython notebook is a tool I loved. &lt;a href="http://wisdomthroughknowledge.blogspot.com/2012/07/accessing-ipython-notebook-remotely.html"&gt;Here&lt;/a&gt; is a tutorial of using ipython remotely with ssh tunnel. I list the commands here for remembering.&lt;/p&gt;
&lt;p&gt;On killdevil&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ipython notebook --no-browser --port=7000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On my local machine&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh -N -f -L localhost:8888:localhost:7000 yiy@killdevil.unc.edu
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;On my webbrowser&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;http://localhost:8888
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="python"></category></entry><entry><title>anaconda</title><link href="index.html/anaconda.html" rel="alternate"></link><published>2014-11-23T13:40:00+01:00</published><updated>2014-11-23T13:40:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-11-23:index.html/anaconda.html</id><summary type="html">&lt;p&gt;anaconda&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://store.continuum.io/cshop/anaconda/"&gt;anaconda&lt;/a&gt; is a python distribution for scientific computing. I used to use epd distribution but this one is better including tons of python packages built-in. The packages of numpy, scipy, ipython, numba, matplotlib are all included. The installation is also straight forward. I would like to recommend this distribution of python for scientists. It is totally free.&lt;/p&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="python"></category></entry><entry><title>numba</title><link href="index.html/numba.html" rel="alternate"></link><published>2014-11-23T11:52:00+01:00</published><updated>2014-11-23T11:52:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-11-23:index.html/numba.html</id><summary type="html">&lt;p&gt;numba&lt;/p&gt;</summary><content type="html">&lt;p&gt;numba is a tool using jit to speed up python applications. Here is a &lt;a href="https://www.youtube.com/watch?v=COglHpt7KSs"&gt;video introduction&lt;/a&gt;.&lt;/p&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="python"></category></entry><entry><title>dissipative particle dynamics</title><link href="index.html/dissipative-particle-dynamics.html" rel="alternate"></link><published>2014-11-22T23:27:00+01:00</published><updated>2014-11-22T23:27:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-11-22:index.html/dissipative-particle-dynamics.html</id><summary type="html">&lt;p&gt;Learning dissipative particle dynamics&lt;/p&gt;</summary><content type="html">&lt;p&gt;I learned about dissipative particle dynamics (DPD) with Max, Upendra, and Ardeshir. It is an amazing tool for simulation of mesoscale systems including polymers and bio-membranes.
The system size can be extened to µm ,and µs for time scale which is about 10^6 faster than regular molecular dynamics.&lt;/p&gt;
&lt;p&gt;This post is for my learning process and materials of DPD.&lt;/p&gt;
&lt;p&gt;Rob Groot seems to be the bigest name in the field of DPD. And he has really good slides for DPD. Here is the &lt;a href="http://www.cecam.org/upload/talk/presentation_2751.pdf"&gt;link&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;In the presentation, he answered the question of how to parameterise DPD. The goal of it is to reproduce local thermodynamics which are measured by compressibility and solubility. Flory-Huggins theory are used for the solubility.&lt;/p&gt;
&lt;p&gt;I tried to run dpd in lammps. With the input below.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# This is LAMMPS input script specifies a simple DPD simulation.
# It reproduces Fig. 2 of Groot and Warren, J. Chem. Phys. 107,
# 4423 (1997)

units       lj
atom_style atomic 
comm_modify vel yes
pair_style  dpd 1.0 1.0 34387

# create simulation box
lattice     fcc 3
region      mybox block -4 4 -4 4 -4 4 units lattice
create_box  1 mybox
create_atoms    1 box

# define masses and interaction coefficient
mass        * 1
pair_coeff  1 1 25 4.5

# create initial velocities
velocity    all create 1.0 4928459 dist gaussian

# change neighbor list parameters to avoid dangerous builds
neighbor    2.0 bin
neigh_modify    delay 3

# specify simulation parameters
timestep    0.04
thermo      10

# first equilibrate the initial condition
fix     1 all nve
run     500

dump traj all xtc  50 traj.xtc
dump_modify traj unwrap yes

dump traj_xyz all xyz 50 traj.xyz

# production run
run     50000
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The gr plot I got from this simulation is the same as the plot 2 in the paper.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Alt Text" src="index.html/images/gr_dpd.png"&gt;&lt;/p&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="molecular dynamics"></category></entry><entry><title>Install mpi4py on killdevil</title><link href="index.html/install-mpi4py-on-killdevil.html" rel="alternate"></link><published>2014-11-22T23:27:00+01:00</published><updated>2014-11-22T23:27:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-11-22:index.html/install-mpi4py-on-killdevil.html</id><summary type="html">&lt;p&gt;The way to install mpi4py on killdevil&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://mpi4py.scipy.org/"&gt;mpi4py&lt;/a&gt; is the package for python to take advantage of mpi. I am try to install it on killdevil.&lt;/p&gt;
&lt;p&gt;The modules: I got on killdevil are&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Currently Loaded Modulefiles:
  1) null                   2) epd/7.2-2              3) openmpi_intel/12.1-5
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;And I run the commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;wget https://bitbucket.org/mpi4py/mpi4py/downloads/mpi4py-1.3.1.tar.gz
tar -xzvf mpi4py-1.3.1.tar.gz
cd mpi4py-1.3.1
python setup.py install --user
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then it is successfully installed.&lt;/p&gt;
&lt;p&gt;I do the test.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mpiexec -n 5 python demo/helloworld.py
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Got the result:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Hello, World! I am process 1 of 5 on c-186-31.kd.unc.edu.
Hello, World! I am process 4 of 5 on c-186-31.kd.unc.edu.
Hello, World! I am process 0 of 5 on c-186-31.kd.unc.edu.
Hello, World! I am process 3 of 5 on c-186-31.kd.unc.edu.
Hello, World! I am process 2 of 5 on c-186-31.kd.unc.edu.
&lt;/pre&gt;&lt;/div&gt;


&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="python"></category><category term="parallel computing"></category></entry><entry><title>thermodynamics integration from scratch using cp2k</title><link href="index.html/thermodynamics-integration-from-scratch-using-cp2k.html" rel="alternate"></link><published>2014-11-20T12:52:00+01:00</published><updated>2014-11-20T12:52:00+01:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-11-20:index.html/thermodynamics-integration-from-scratch-using-cp2k.html</id><summary type="html">&lt;p&gt;help me remember some tools in setting up MD simulation and free energy calculation.&lt;/p&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;2 ions in 512 water system is using to calculation the Potential of Mean Force (PMF) for ion pair. ( I was using 64 water system where the size of the box is only about 12.0Å, the PMF can only exceed to 6.0Å, if I use 512 water system the box size can be more than 24Å the PMF can exceed to 10.0Å. )&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I need to know the size of the box with such number of water and ion in the system. (maybe not necessary for such big system, I put it here for smaller system and large concentration ionic solutions) Details are in my code.&lt;/p&gt;
&lt;p&gt;&lt;a href="index.html/codes/cal_density.py"&gt;cal_density.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="index.html/codes/cal_density_512h2o.py"&gt;cal_density_512h2o.py&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The box size calculated for NaCl in 512H2O is 24.8736639347 Å.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Generate the initial structure for my simulation. I use gromacs and vmd to do that.
First using genbox tool in gromacs to generate a box of water with 514 water in it. The size is a little bit larger to make sure enough water molecules can be included.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;genbox_d -cs spc216.gro -box 2.52 2.52 2.52 -maxsol 514
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;In this way, I got a out.gro file. I will rename it to h2o514.gro file. And edit it to change the last two water to a Na ion and a Cl ion. Also the size of the box will be changed as well as the index of the atoms and the total number of atoms in the top of the file. Then I rename it to h2o512NaCl.gro. I have the final version of it here.
&lt;a href="index.html/codes/h2o512NaCl.gro"&gt;h2o512NaCl.gro&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I would like to use psf and xyz file for the input of topology information and coordinations in to cp2k. VMD is used here for this task. So I use the script I wrote for vmd.
&lt;a href="index.html/codes/tr_psf512.vmd"&gt;tr_psf512.vmd&lt;/a&gt;
it used in this way.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;vmd -e tr_psf512.vmd
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The files I got here is H2O512NaCl.xyz, and H2O512NaCl_gro.psf . They also need to be edited (OW -&amp;gt; O, HW1, HW2 -&amp;gt; H, the atom mass, and change the form of psf to upsf which can be loaded by cp2k). The final version of these two files are given here.
&lt;a href="index.html/codes/H2O512NaCl.xyz"&gt;H2O512NaCl.xyz&lt;/a&gt;
&lt;a href="index.html/codes/H2O512NaCl_gro.psf"&gt;H2O512NaCl_gro.psf&lt;/a&gt;
(This structure is not good enough for directly calculation since the cell size is not the same. I will try to use packmol to regenerate another initial structure for the calculation later.)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The force field I am using is &lt;a href="http://scitation.aip.org/content/aip/journal/jcp/130/12/10.1063/1.3081142"&gt;SPCE/HMN&lt;/a&gt;. An online &lt;a href="http://www.colby.edu/chemistry/PChem/Hartree.html"&gt;energy unit convertion tool&lt;/a&gt; is used for the parameters.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The &lt;a href="index.html/codes/H2O_SPCE_HMN.inp"&gt;input file&lt;/a&gt; for cp2k. It is the input file for constraint dynamics. The lagrange multiplier will print out for the constraint force for the thermodynamics integration calculation. &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;</content><category term="molecular dynamics"></category><category term="free energy calculation"></category></entry><entry><title>calculate madelung constant by ewald method</title><link href="index.html/calculate-madelung-constant-by-ewald-method.html" rel="alternate"></link><published>2014-04-22T14:31:00+02:00</published><updated>2014-04-22T14:31:00+02:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-04-22:index.html/calculate-madelung-constant-by-ewald-method.html</id><summary type="html">&lt;p&gt;Understand the details of ewald summation by calculate madelung constant&lt;/p&gt;</summary><content type="html">&lt;p&gt;I would like to understand the details of ewald summation. So, I took the
calculation of madelung constant (&lt;a href="http://en.wikipedia.org/wiki/Madelung_constant"&gt;Wikipedia&lt;/a&gt;)
as an example. I took two method to calculate madelung constant.
One is calculate it by expanding cubes method, the other is ewald summation method.
A good description of ewald summation can be found &lt;a href="http://micro.stanford.edu/mediawiki/images/4/46/Ewald_notes.pdf"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;After the derivation, the total Coulomb interaction energy can be finally written as,
&lt;/p&gt;
&lt;div class="math"&gt;\begin{array}
 E E &amp;amp;=&amp;amp; E^S + E^L - E^{self} \\
\end{array}&lt;/div&gt;
&lt;div class="math"&gt;\begin{array}
   &amp;amp;=&amp;amp; \frac{1}{4\pi\epsilon_0}\frac{1}{2}
       \sum_\mathbf{n} \sum_{i=1}^N \sum_{j=1}^N
       \frac{q_iq_j}{|\mathbf{r}_i - \mathbf{r}_j + \mathbf{n}L|}
       erfc\left( \frac{|\mathbf{r}_i - \mathbf{r}_j + \mathbf{n}L|}{\sqrt{2}\sigma}\right)
\end{array}&lt;/div&gt;
&lt;div class="math"&gt;\begin{array}
    + + \frac{1}{2V\epsilon_0} \sum_{\mathbf{k}\neq \mathbf{0}}
    \frac{e^{-\sigma^2k^2/2}}{k^2}|S(\mathbf{k})| 
    -\frac{1}{4\pi\epsilon_0}\frac{1}{\sqrt{2\pi\sigma}}
    \sum_{i=1}^{N}q_i^2
\end{array}&lt;/div&gt;
&lt;p&gt;In the &lt;a href="http://micro.stanford.edu/mediawiki/images/4/46/Ewald_notes.pdf"&gt;paper&lt;/a&gt; 
I just mentioned, we can find all the details for this formula.&lt;/p&gt;
&lt;p&gt;While, we need potential instead of total energy to calculate Madelung constant.
We should take derivative over q to calculate the potential. Notice that some 
term exists which include 1/2. These are used to deal with double counting.
When we want to calculate potential, these 1/2 should be erased.&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(test^2\)&lt;/span&gt;&lt;/p&gt;
&lt;!-- [a link relative to content root]({filename}/article1.md)
[a link relative to current file]({filename}../article1.md) --&gt;

&lt;p&gt;&lt;a href="index.html/codes/madelung_realspace.m"&gt;madelung_realspace.m&lt;/a&gt;
&lt;a href="index.html/codes/madelung_ewald.m"&gt;madelung_ewald.m&lt;/a&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="molecular dynamics"></category><category term="ewald"></category><category term="matlab"></category></entry><entry><title>qmcpack - a qmc package</title><link href="index.html/qmcpack-a-qmc-package.html" rel="alternate"></link><published>2014-04-22T14:31:00+02:00</published><updated>2014-04-22T14:31:00+02:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-04-22:index.html/qmcpack-a-qmc-package.html</id><summary type="html">&lt;p&gt;QMCPACK with video tutorials&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="http://qmcpack.org/"&gt;QMCPACK&lt;/a&gt; is a software designed for qmc calculation. reptation is included. And it can start from pwscf calculation which attracts me a lot.&lt;/p&gt;
&lt;p&gt;I found a video tutorial from their website.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.youtube.com/playlist?list=PLZ3WPqWe6k8t6__0VESBAh6KfUcVo7JTt"&gt;QMCPACK Summer Training 2014&lt;/a&gt;&lt;/p&gt;</content><category term="quantum monte carlo"></category></entry><entry><title>My first Post</title><link href="index.html/my-first-post.html" rel="alternate"></link><published>2014-04-13T19:20:00+02:00</published><updated>2014-04-13T19:20:00+02:00</updated><author><name>Yi Yao</name></author><id>tag:None,2014-04-13:index.html/my-first-post.html</id><summary type="html">&lt;p class="first last"&gt;I generate this website using pelican and pelican-bootstrap3.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;I generate this website using pelican and pelican-bootstrap3.
Now, I can write blogs with it in rst form.&lt;/p&gt;
</content><category term="website"></category><category term="python"></category></entry></feed>